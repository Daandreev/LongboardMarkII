(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     70691,       1496]
NotebookOptionsPosition[     68545,       1422]
NotebookOutlinePosition[     68921,       1438]
CellTagsIndexPosition[     68878,       1435]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Raw Data", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540074110407*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<F:\\\\MarkII\\\\LongboardMarkII\\\\Ev Sensor \
Module\\\\Data\\\\Data1.csv\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RawTime", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringSplit", "[", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "\"\<:\>\""}], "]"}], 
        "]"}], "*", 
       RowBox[{"{", 
        RowBox[{"360", ",", "60", ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AccelerationX", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{".25", "*", 
        RowBox[{"(", 
         RowBox[{"i", "-", "2"}], ")"}]}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AccelerationY", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{".25", "*", 
        RowBox[{"(", 
         RowBox[{"i", "-", "2"}], ")"}]}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AccelerationZ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{".25", "*", 
        RowBox[{"(", 
         RowBox[{"i", "-", "2"}], ")"}]}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "5"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GPSLong", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{".25", "*", 
        RowBox[{"(", 
         RowBox[{"i", "-", "2"}], ")"}]}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "6"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GPSLat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{".25", "*", 
        RowBox[{"(", 
         RowBox[{"i", "-", "2"}], ")"}]}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "7"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GPSSpeed", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{".25", "*", 
        RowBox[{"(", 
         RowBox[{"i", "-", "2"}], ")"}]}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "8"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AccelerationXRaw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AccelerationYRaw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AccelerationZRaw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "5"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GPSLongRaw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "6"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GPSLatRaw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "7"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GPSSpeedRaw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "8"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AccelerationMagRaw", "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["AccelerationXRaw", "2"], "+", 
     SuperscriptBox["AccelerationYRaw", "2"], "+", 
     SuperscriptBox["AccelerationZRaw", "2"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.719793373205928*^9, 3.7197933964793067`*^9}, {
   3.7197935350032153`*^9, 3.7197937088663607`*^9}, {3.7197939151560726`*^9, 
   3.719793951493676*^9}, {3.7197940801976714`*^9, 3.7197941685239925`*^9}, {
   3.719794214558133*^9, 3.719794269980385*^9}, {3.719828273631564*^9, 
   3.7198283519006147`*^9}, {3.720120114557767*^9, 3.7201201199463787`*^9}, {
   3.720120152278283*^9, 3.720120157103811*^9}, {3.7201202766373005`*^9, 
   3.7201203668557434`*^9}, {3.720120713590406*^9, 3.720120713802987*^9}, 
   3.720120755099354*^9, 3.7201207932717695`*^9, {3.720121395642148*^9, 
   3.72012139972248*^9}, {3.7201219188930006`*^9, 3.7201219190634756`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GPSCenter", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"Max", "[", "GPSLatRaw", "]"}], "+", 
       RowBox[{"Min", "[", "GPSLatRaw", "]"}]}], "2"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"Max", "[", "GPSLongRaw", "]"}], "+", 
       RowBox[{"Min", "[", "GPSLongRaw", "]"}]}], "2"]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7198282351171436`*^9, 3.7198282654171033`*^9}, {
   3.7198306887219844`*^9, 3.719830725900421*^9}, {3.719830992692263*^9, 
   3.7198310385674677`*^9}, {3.719832622278616*^9, 3.7198326255314703`*^9}, 
   3.7201202402111864`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Consts", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.7205400912563715`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "GoogleMapsAPIKey", "=", 
   "\"\<AIzaSyBQrB0NjQRQ48tdEuwrs9xfjye24E42Zls\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "ClientID", "=", 
   "\"\<808304395515-sr1olnp1ffgkff47g1ondchnukqqtbvd.apps.googleusercontent.\
com\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClientSecret", "=", "\"\<bsTRX11N-gStvtZWdRWAbAYs\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "URLCallInit", "=", 
   "\"\<https://maps.googleapis.com/maps/api/staticmap?\>\""}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.719825674446245*^9, 3.719825685897647*^9}, {
  3.7198259446899824`*^9, 3.719825946972705*^9}, {3.7198310971708775`*^9, 
  3.719831128435783*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540114020733*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListToString", "[", "someString_", "]"}], ":=", 
   RowBox[{"StringDelete", "[", 
    RowBox[{
     RowBox[{"ToString", "[", "someString", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<{\>\"", ",", "\"\<}\>\"", ",", "\"\< \>\"", ",", "\"\<, \>\""}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7198312567257085`*^9, 3.7198312572379866`*^9}, {
   3.71983131153093*^9, 3.719831315446422*^9}, {3.719831876976493*^9, 
   3.7198319505411935`*^9}, {3.7198336753006296`*^9, 
   3.7198336757644997`*^9}, {3.7198339967232113`*^9, 3.7198340019631414`*^9}, 
   3.7205418201168795`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IntToHex", "[", "n_Integer", "]"}], ":=", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"ToString", "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"n", ",", "16"}], "]"}], "/.", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"10", ",", "15"}], "]"}], "\[Rule]", 
         RowBox[{"CharacterRange", "[", 
          RowBox[{"\"\<A\>\"", ",", "\"\<F\>\""}], "]"}]}], "]"}]}], ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7198312567257085`*^9, 3.7198312572379866`*^9}, {
   3.71983131153093*^9, 3.719831315446422*^9}, {3.719831876976493*^9, 
   3.7198319505411935`*^9}, {3.7198336753006296`*^9, 
   3.7198336757644997`*^9}, {3.7198339967232113`*^9, 
   3.7198340019631414`*^9}, {3.7205402152139626`*^9, 3.7205402914021063`*^9}, 
   3.7205404360552263`*^9, 3.7205418189927607`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NormalizeList", "[", "list_", "]"}], ":=", 
   FractionBox[
    RowBox[{"list", "-", 
     RowBox[{"Min", "[", "list", "]"}]}], 
    RowBox[{
     RowBox[{"Max", "[", "list", "]"}], "-", 
     RowBox[{"Min", "[", "list", "]"}]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.720541355723769*^9, 3.720541383291247*^9}, 
   3.7205418172361107`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"StretchListToRange", "[", 
    RowBox[{"list_", ",", "min_", ",", "max_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"NormalizeList", "[", "list", "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"max", "-", "min"}], ")"}]}], "+", "min"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7205404650603385`*^9, 3.7205405678150883`*^9}, {
  3.7205406175760975`*^9, 3.7205406184458284`*^9}, {3.7205406580204086`*^9, 
  3.720540659180056*^9}, {3.7205409427473464`*^9, 3.720540957955025*^9}, {
  3.7205414313357115`*^9, 3.7205414565312634`*^9}, {3.720541502272611*^9, 
  3.720541532777261*^9}, {3.7205415766527386`*^9, 3.7205416084425135`*^9}, {
  3.720541684117427*^9, 3.7205416845476007`*^9}, {3.7205417253226304`*^9, 
  3.7205417729783373`*^9}, {3.7205418098891897`*^9, 3.720541815724781*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InverseList", "[", "list_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Max", "[", "list", "]"}], "+", 
    RowBox[{"Min", "[", "list", "]"}], "-", "list"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720543338048983*^9, 3.72054334319762*^9}}],

Cell[CellGroupData[{

Cell["Encoded Polyline Algorithm Format", "Subsubsubsection",
 CellChangeTimes->{3.720543264505478*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TwosComplement", "[", 
   RowBox[{"n_", ",", "bits_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Positive", "[", "n", "]"}], ",", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"n", ",", "2", ",", "bits"}], "]"}], ",", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FromDigits", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerDigits", "[", 
           RowBox[{"n", ",", "2", ",", "bits"}], "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[Rule]", "0"}], ",", 
            RowBox[{"0", "\[Rule]", "1"}]}], "}"}]}], ",", "2"}], "]"}], "+", 
       "1"}], ",", "2", ",", "bits"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7205440141998186`*^9, 3.720544014202813*^9}, {
  3.7205442806178074`*^9, 3.7205442995799637`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LeftShiftList", "[", "list_", "]"}], ":=", 
  RowBox[{"Append", "[", 
   RowBox[{
    RowBox[{"Delete", "[", 
     RowBox[{"list", ",", "1"}], "]"}], ",", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7205443808554955`*^9, 3.720544401281557*^9}, {
  3.72054443731793*^9, 3.7205445101622467`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InvertBitList", "[", "list_", "]"}], ":=", 
   RowBox[{"list", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "0"}], ",", 
      RowBox[{"0", "\[Rule]", "1"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720544631593872*^9, 3.720544652623667*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EPAF", "[", "n_", " ", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "exampleLS", ",", "exampleLSInv", ",", "e62", ",", "e71", ",", "e81", 
       ",", "e91", ",", "e101", ",", "e111"}], "}"}], ",", 
     RowBox[{
      RowBox[{"exampleLS", "=", 
       RowBox[{"LeftShiftList", "[", 
        RowBox[{"TwosComplement", "[", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"example", "*", 
            SuperscriptBox["10", "5"]}], "]"}], ",", "32"}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"exampleLSInv", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Negative", "[", "example", "]"}], ",", 
         RowBox[{"exampleLS", "//", "InvertBitList"}], ",", "exampleLS"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"e62", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"exampleLSInv", ",", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "exampleLSInv", "]"}], "-", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"Length", "[", "exampleLSInv", "]"}], ",", "5"}], 
               "]"}]}], ")"}]}]}], "]"}], ",", "5"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "e62", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"e62", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"e62", "=", 
             RowBox[{"Delete", "[", 
              RowBox[{"e62", ",", "1"}], "]"}]}], ",", 
            RowBox[{"i", "--"}]}], "}"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"e71", "=", 
       RowBox[{"Reverse", "[", "e62", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"e81", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Prepend", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", "e71"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"e81", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"Length", "[", "e81", "]"}], ",", "1"}], "]"}], "]"}], "=", 
       "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"e91", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"FromDigits", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", "e81"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"e101", "=", 
       RowBox[{"e91", "+", "63"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"e111", "=", 
       RowBox[{"FromCharacterCode", "[", "e101", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "e111", "}"}]}]}], " ", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720548831431404*^9, 3.720548838728991*^9}, {
   3.7205488693115363`*^9, 3.7205492131938295`*^9}, {3.7205493133918476`*^9, 
   3.7205493170555725`*^9}, {3.720549532746683*^9, 3.7205495740930405`*^9}, 
   3.720549694446703*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EPAF", "[", "38.5", "]"}]], "Input",
 CellChangeTimes->{{3.7205490996144514`*^9, 3.720549104344372*^9}}],

Cell[BoxData[
 RowBox[{"{", "\<\"_p~iF\"\>", "}"}]], "Output",
 CellChangeTimes->{{3.720549104793782*^9, 3.720549151369006*^9}, {
   3.7205492157683783`*^9, 3.7205492457254515`*^9}, {3.7205493472966995`*^9, 
   3.7205493970395355`*^9}, 3.72054946887286*^9, 3.7205495407479773`*^9, 
   3.720549577886691*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Markers", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540102493376*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"markers", "=", 
   RowBox[{"ListToString", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<&markers=\\\\\\\\color:red%7Clabel:S%7C\>\"", ",", 
         RowBox[{"ToString", "[", 
          RowBox[{"GPSToString", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"NumberForm", "[", 
              RowBox[{
               RowBox[{"GPSLatRaw", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "10"}], "]"}], ",", 
             RowBox[{"NumberForm", "[", 
              RowBox[{
               RowBox[{"GPSLongRaw", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "10"}], "]"}]}], "}"}], 
           "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "GPSLatRaw", "]"}], ",", "10"}], "}"}]}], 
      "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.719833708474538*^9, 3.719833809218799*^9}, {
   3.719833913307587*^9, 3.719833913459858*^9}, {3.7198339446839476`*^9, 
   3.7198339698827467`*^9}, {3.719834010200912*^9, 3.71983402560921*^9}, {
   3.7198342273107204`*^9, 3.7198342309378033`*^9}, {3.719834268617344*^9, 
   3.7198342796670275`*^9}, {3.720122036907322*^9, 3.720122066273781*^9}, {
   3.7201221508836813`*^9, 3.7201221652216673`*^9}, 3.7205430109845533`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Paths", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540102493376*^9}, {
  3.7205418490533*^9, 3.720541850555877*^9}}],

Cell[CellGroupData[{

Cell["Color And Width", "Subsubsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540102493376*^9}, {
  3.720543020441346*^9, 3.72054302738922*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GPSSpeedRawWidth", "=", 
   RowBox[{"InverseList", "[", 
    RowBox[{"StretchListToRange", "[", 
     RowBox[{"GPSSpeedRaw", ",", "3", ",", "50"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.720539570377695*^9, 3.7205396671666384`*^9}, {
   3.7205397337541018`*^9, 3.720539759855663*^9}, {3.72053989375331*^9, 
   3.720539896208892*^9}, {3.720539997532828*^9, 3.720540058248207*^9}, {
   3.7205418946722155`*^9, 3.72054191855692*^9}, {3.7205429189771433`*^9, 
   3.720542919067172*^9}, 3.7205430146998158`*^9, {3.720543068090323*^9, 
   3.7205430867703104`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AccelerationMagRawColor", "=", 
   RowBox[{"IntToHex", "/@", 
    RowBox[{"Round", "[", 
     RowBox[{"StretchListToRange", "[", 
      RowBox[{"AccelerationMagRaw", ",", "0", ",", 
       RowBox[{
        RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "@", 
        "\"\<FF00FF\>\""}]}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7205418661587524`*^9, 3.7205418927579403`*^9}, {
   3.7205419254042735`*^9, 3.72054197308182*^9}, {3.720542061079116*^9, 
   3.7205420874178095`*^9}, {3.7205421652067823`*^9, 
   3.7205422091691008`*^9}, {3.720542347704399*^9, 3.7205423900887575`*^9}, {
   3.7205424442757635`*^9, 3.72054245052361*^9}, {3.7205428984724245`*^9, 
   3.72054289963381*^9}, 3.7205430072955356`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"paths", "=", 
  RowBox[{"ListToString", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<&path=color:\>\"", ",", "\"\<0x\>\"", ",", 
        RowBox[{"AccelerationMagRawColor", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<|weight:\>\"", ",", 
        RowBox[{"Round", "[", 
         RowBox[{"GPSSpeedRawWidth", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\"\<|\>\"", ",", 
        RowBox[{"ToString", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"GPSToString", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"GPSLatRaw", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "10"}], "]"}], ",", 
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"GPSLongRaw", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "10"}], "]"}]}], "}"}], 
            "]"}], ",", "\"\<|\>\"", ",", 
           RowBox[{"GPSToString", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"GPSLatRaw", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "-", "10"}], "]"}], "]"}], ",", "10"}], "]"}], 
              ",", 
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"GPSLongRaw", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "-", "10"}], "]"}], "]"}], ",", "10"}], 
               "]"}]}], "}"}], "]"}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "12", ",", 
        RowBox[{"Length", "[", "GPSLatRaw", "]"}], ",", "10"}], "}"}]}], 
     "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.720180390948539*^9, 3.720180394112673*^9}, 
   3.720180424822009*^9, {3.7201804995835314`*^9, 3.7201805607123594`*^9}, {
   3.720180595915552*^9, 3.7201806163219547`*^9}, {3.720180701809491*^9, 
   3.720180705294445*^9}, {3.720180807607481*^9, 3.7201808077850704`*^9}, {
   3.720180844822281*^9, 3.720180856341687*^9}, {3.720180897355769*^9, 
   3.720180948306083*^9}, {3.720181124833641*^9, 3.720181257381939*^9}, {
   3.7201812976315575`*^9, 3.7201813196778464`*^9}, {3.7205394902570157`*^9, 
   3.7205395150518193`*^9}, {3.720539793336166*^9, 3.7205398366914234`*^9}, {
   3.720539874032898*^9, 3.7205398776761303`*^9}, {3.7205399869300375`*^9, 
   3.720540002498931*^9}, {3.720542462721394*^9, 3.720542522813207*^9}, {
   3.720542564764391*^9, 3.7205425904916205`*^9}, {3.7205430309392586`*^9, 
   3.7205430457956696`*^9}, 3.7205499712938795`*^9}],

Cell[BoxData["\<\"&path=color:0x425AB2|weight:50|38.65098,-90.31356|38.65098,-\
90.31356&path=color:0x529702|weight:49|38.65098,-90.31356|38.65098,-90.31356&\
path=color:0x5BBD3C|weight:16|38.65099,-90.31355|38.65098,-90.31356&path=\
color:0x454929|weight:9|38.65101,-90.31354|38.65099,-90.31355&path=color:\
0x38B9B6|weight:10|38.65103,-90.31352|38.65101,-90.31354&path=color:0x625A1E|\
weight:10|38.65105,-90.31351|38.65103,-90.31352&path=color:0x2F3274|weight:9|\
38.65108,-90.31351|38.65105,-90.31351&path=color:0x325F54|weight:10|38.6511,-\
90.3135|38.65108,-90.31351&path=color:0x5B9E96|weight:11|38.65112,-90.31349|\
38.6511,-90.3135&path=color:0x4820B2|weight:6|38.65115,-90.31348|38.65112,-90.\
31349&path=color:0x191DB8|weight:5|38.65117,-90.31347|38.65115,-90.31348&path=\
color:0x515AAA|weight:7|38.65119,-90.31345|38.65117,-90.31347&path=color:\
0x4F4CB0|weight:9|38.65119,-90.31341|38.65119,-90.31345&path=color:0x2F94FC|\
weight:6|38.65117,-90.3134|38.65119,-90.31341&path=color:0x8F48F8|weight:13|\
38.65116,-90.31337|38.65117,-90.3134&path=color:0x39ADB4|weight:8|38.65115,-\
90.31334|38.65116,-90.31337&path=color:0x22D13D|weight:12|38.65115,-90.31329|\
38.65115,-90.31334&path=color:0x3E992A|weight:11|38.65115,-90.31327|38.65115,-\
90.31329&path=color:0xAC7C53|weight:10|38.65115,-90.31324|38.65115,-90.31327\"\
\>"], "Output",
 CellChangeTimes->{3.7205499717686424`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["URL Formation", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540102493376*^9}, {
  3.7205418490533*^9, 3.720541850555877*^9}, {3.7205429521091285`*^9, 
  3.7205429535117865`*^9}, {3.7205429886043215`*^9, 3.7205429937995467`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApiCallTestPath", "=", 
  RowBox[{"StringJoin", "[", 
   RowBox[{"{", 
    RowBox[{"URLCallInit", ",", "\"\<center=\>\"", ",", 
     RowBox[{"ListToString", "[", "GPSCenter", "]"}], ",", "\"\<&zoom=\>\"", 
     ",", "\"\<20\>\"", ",", "\"\<&size=\>\"", ",", "\"\<600x600\>\"", ",", 
     "\"\<&maptype=\>\"", ",", "\"\<roadmap\>\"", ",", 
     RowBox[{"ToString", "[", "paths", "]"}], ",", "\"\<&key=\>\"", ",", 
     "GoogleMapsAPIKey"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7198311332040005`*^9, 3.7198311791053233`*^9}, {
   3.7198312273903503`*^9, 3.719831249992202*^9}, 3.7198313406010847`*^9, {
   3.719831592972476*^9, 3.719831694702219*^9}, {3.719831973376526*^9, 
   3.719832103850774*^9}, {3.719832144223005*^9, 3.7198321534258194`*^9}, {
   3.719832298421966*^9, 3.7198322997873955`*^9}, {3.719832407218625*^9, 
   3.719832457690921*^9}, {3.7198326525221806`*^9, 3.7198326892543993`*^9}, {
   3.719832849790996*^9, 3.7198329787872376`*^9}, {3.719833021839307*^9, 
   3.719833021970642*^9}, {3.719833249342827*^9, 3.719833259063267*^9}, {
   3.719833389084715*^9, 3.719833417881795*^9}, {3.7198335025335474`*^9, 
   3.7198335060808563`*^9}, {3.719833567432327*^9, 3.719833603261858*^9}, {
   3.7198336828849554`*^9, 3.7198336873746896`*^9}, {3.7198340754292655`*^9, 
   3.7198341157894115`*^9}, {3.719834346893022*^9, 3.7198343485518165`*^9}, {
   3.7201211445267*^9, 3.7201211739767923`*^9}, {3.7201212939881487`*^9, 
   3.720121309142897*^9}, {3.7201213435275965`*^9, 3.720121345737136*^9}, {
   3.720121506949396*^9, 3.7201215358718557`*^9}, {3.7201219958021407`*^9, 
   3.7201220001096215`*^9}, {3.720180648747548*^9, 3.7201806792297163`*^9}, {
   3.7205390283675065`*^9, 3.7205390287791033`*^9}, {3.720542987242483*^9, 
   3.7205429954896784`*^9}, 3.72054323379998*^9, 3.7205499621228247`*^9}],

Cell[BoxData["\<\"https://maps.googleapis.com/maps/api/staticmap?center=38.\
6511-90.3134&zoom=20&size=600x600&maptype=roadmap&path=color:0x425AB2|weight:\
50|38.65098,-90.31356|38.65098,-90.31356&path=color:0x529702|weight:49|38.\
65098,-90.31356|38.65098,-90.31356&path=color:0x5BBD3C|weight:16|38.65099,-90.\
31355|38.65098,-90.31356&path=color:0x454929|weight:9|38.65101,-90.31354|38.\
65099,-90.31355&path=color:0x38B9B6|weight:10|38.65103,-90.31352|38.65101,-90.\
31354&path=color:0x625A1E|weight:10|38.65105,-90.31351|38.65103,-90.31352&\
path=color:0x2F3274|weight:9|38.65108,-90.31351|38.65105,-90.31351&path=color:\
0x325F54|weight:10|38.6511,-90.3135|38.65108,-90.31351&path=color:0x5B9E96|\
weight:11|38.65112,-90.31349|38.6511,-90.3135&path=color:0x4820B2|weight:6|38.\
65115,-90.31348|38.65112,-90.31349&path=color:0x191DB8|weight:5|38.65117,-90.\
31347|38.65115,-90.31348&path=color:0x515AAA|weight:7|38.65119,-90.31345|38.\
65117,-90.31347&path=color:0x4F4CB0|weight:9|38.65119,-90.31341|38.65119,-90.\
31345&path=color:0x2F94FC|weight:6|38.65117,-90.3134|38.65119,-90.31341&path=\
color:0x8F48F8|weight:13|38.65116,-90.31337|38.65117,-90.3134&path=color:\
0x39ADB4|weight:8|38.65115,-90.31334|38.65116,-90.31337&path=color:0x22D13D|\
weight:12|38.65115,-90.31329|38.65115,-90.31334&path=color:0x3E992A|weight:11|\
38.65115,-90.31327|38.65115,-90.31329&path=color:0xAC7C53|weight:10|38.65115,-\
90.31324|38.65115,-90.31327&key=AIzaSyBQrB0NjQRQ48tdEuwrs9xfjye24E42Zls\"\>"],\
 "Output",
 CellChangeTimes->{3.7205499631520624`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["API Call", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540102493376*^9}, {
  3.7205418490533*^9, 3.720541850555877*^9}, {3.7205429521091285`*^9, 
  3.7205429535117865`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ImageTestPath", "=", 
  RowBox[{"Import", "[", "ApiCallTestPath", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SetDirectory", "[", 
  "\"\<F:\\\\MarkII\\\\LongboardMarkII\\\\Ev Sensor Module\\\\Data\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Derp.JPEG\>\"", ",", "ImageTestPath"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7198311332040005`*^9, 3.7198311791053233`*^9}, {
   3.7198312273903503`*^9, 3.719831249992202*^9}, 3.7198313406010847`*^9, {
   3.719831592972476*^9, 3.719831694702219*^9}, {3.719831973376526*^9, 
   3.719832103850774*^9}, {3.719832144223005*^9, 3.7198321534258194`*^9}, {
   3.719832298421966*^9, 3.7198322997873955`*^9}, {3.719832407218625*^9, 
   3.719832457690921*^9}, {3.7198326525221806`*^9, 3.7198326892543993`*^9}, {
   3.719832849790996*^9, 3.7198329787872376`*^9}, {3.719833021839307*^9, 
   3.719833021970642*^9}, {3.719833249342827*^9, 3.719833259063267*^9}, {
   3.719833389084715*^9, 3.719833417881795*^9}, {3.7198335025335474`*^9, 
   3.7198335060808563`*^9}, {3.719833567432327*^9, 3.719833603261858*^9}, {
   3.7198336828849554`*^9, 3.7198336873746896`*^9}, {3.7198340754292655`*^9, 
   3.7198341157894115`*^9}, {3.719834346893022*^9, 3.7198343485518165`*^9}, {
   3.7201211445267*^9, 3.7201211739767923`*^9}, {3.7201212939881487`*^9, 
   3.720121309142897*^9}, {3.7201213435275965`*^9, 3.720121345737136*^9}, {
   3.720121506949396*^9, 3.7201215358718557`*^9}, {3.7201219958021407`*^9, 
   3.7201220001096215`*^9}, {3.720180648747548*^9, 3.7201806792297163`*^9}, {
   3.7205390283675065`*^9, 3.7205390287791033`*^9}, {3.7205429842458467`*^9, 
   3.7205429977792325`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvWusZNd132kkCDD6EGAQ5Nt8msmXfMmnOIiABHDGASaJxoCTMIliGYIe
lkexlCgR1aGs2CJbFMWYlBjTkUg2ZYoym2SbpGyy1SLNFiUylNh8dYuP5tu3
xZL6ctNyiVSBPFZMDQa4mNW1uhb33eecXee51378//j3RfW59Th16tT63bX3
Wvv87x/8j//y//krP/dzP/eJ/4V+/MsPfPL/vPDCD3zqgv+V/vOvP/aJ3/jw
x379Q//sYwd+/cO/fuE7P/hXaeO//Sv879zt48ePHzhw4K23/udek/i3i8XC
2U4bDx061PgQv9qeEIKCic72qqpWq9fJy7UWELRfP/vJt+ByTDgjMLVFDMaW
MT9wttscpHPmwEa0sX7n+hO2Ybd+z0NrHT96Nf13sZ+e9F/aSKFs61NBUBfR
aekgkk5m1WAMqUk9MsMh7edg42+fOnWOUPRzbwNBuhufPHx/YdN5im2I1vaE
npemx/KTCGeFofy04CAUQDYiOYUEIvOWemSGQ9o/wmkDSGTziGhIkvtTcGB4
8X/tPJE3OhxkzC2ahknrxFxsmHv+sUev7ohUCJpPjEiMsmamxmj50I2/oh6x
4Tns56AgTPIyErGvbWCTQoHDQTuD27MGVGkjk47zyraXdjba47TdU0sIUhEm
ItNVPVT+5c5/vevgz9PP5kD6b//2N//wIvkv3aYt6uF9Qv/ZS0c+dsHfqm8/
+OG/3/YQ+dW73/kO9f3328ZWXVvrYQhJkjOKGG0UBOpPfm7L0avlUW0QbHtp
u8yGodwhGkFQXKpPRAKRsakeKg9f9V7iIP1sDKQU6gl8b7x6jG7TT7odf/Dv
5Qf+6Leuu+SXG99420MSOgIeDjaCrH4HHtikr/NiXbginFqshzHth3O2KNz0
VNS0vTSPhfKcoA1KBitJdqNLKQ4ExSZMREYiJ04+/cBVBEG6QT/pdmPMv/Xq
9z9yz2V0m34ePHgJU+CFx6799K/93ff9o7/x4Xf9b4QSvidt/MA//pu/+d6/
Y1641X6S5ffvuOyj/4B+RQ/hX9Gdj934H+iezm25J/2k2/V7OrtH2Rw9J+0D
JarOb/mpmON/evL6xicnEwRp/+mtvecf/nUy3ZneBT2KXX+n9q/4Z/2F6PZ9
t11EL0R7RTtPj+UD2OWgTXWs2EKlesHJogYyR1wws7Bm9+octH+7sCpL/VWj
i/3lNxwc+OWEfbJvPCkpYHVe1xmq5fvzc3YKTBAUh+oTkUDkfLJJQfnd1z/7
TuEg3ea8z+EgRWPOmOgnM+Jn6/FSiu1/+do3KfJTKOZ7UlJJz0A/KTLbT/L5
C3/xoRt/5afLe+kn/4ruTCDgl7Nv0z0Ju/wkdNv5bd32/R0O0q94f2g/eSy3
/uTkj13wtwim9Fh+j3RnHiaVZ2t8p3JwGl+IthMB6f78WIZsx4M27bHaW4Oj
cXxysQaKZ+jSLhxl2XN29VZBfkLK6RbbCLvYT0y73ob5Jc8gcBSuMfhkr+xq
VXsn63zkd+Tv+4CgCIVR1sllk4IiLeFPOEiuF8xwqOeALEGefq52v05BmMIv
UUOSI9rIv6KUx34SivmSRvGv6IaEa/s23VOeREjRBkG+P/+W7u9wUJ6qvkWe
XCYHCVu0hbJdTuhs2DW+U/s+9Rei7QQyvkHU63XQpj1WW79fnrxJal24v09o
xb+ttwo6s3uNSWj9nnJm2oRabBLGeinOnpUq7lk1q/xfTh6Zkg4f61iHoKSF
UdbBkgj55tk/4mTQ5iBtoe11DlL0JlJwxsRbPv1rf5e2PP3AVZQt1kM6h2Ub
QDIO6VDGud0Y29sguJWDDhTqT25PDj71wFX0NolQXBckz9b4Th0OOi/k3KHX
QZv2WI3/ohEEpU/Qzgfr9ZxMN74tc4WNT9vWvy9iZjmME0kJjYzcCnNtOjud
FyhAhcoR2j38kggpyaBjJyXk0Ep5E0VanuSS4E+pE0Vs4oiEdJ6oskcd2Qc/
/PdpI6VIRAFigSe222N9Miro4SDfn7BCT1sfF+WnahwX5SfnycGfWSOWx278
D8yU9/zDv86Uqb9T+ZWMizov1MbBLgdt2mM13xdtsa5XsbfUmwcPtKyxthVJ
/FjC3KJp8JbRvGclhvJCnL3y3ez5zcW2oVoIKkQYZV1sOEjgsNn3s00+yLar
XCS0UnyWKaqfbQYSyQQOCelcHGJXobAJo7Txff/ob/zme//OC49d64ntdE96
IdpCCKDbnnuy6YXo/pTEEYMc6HAZCb2olK/Un5wnB3+2rmChu3GpDOOeH9v4
TuVXbS/UxsEuB22qYzU3Bxtlp3g8rCpUsrWdg1Yqx3duHICVNJDTVXvL3v4x
0vqTQBBkq6hRVn8y2DZL2MWK3QSUxxFN7DrJVDz3QdP+bjWLO/c9d7BBeX4R
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
0qc=
    "], {{0, 600}, {600, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{600, 600},
  PlotRange->{{0, 600}, {0, 600}}]], "Output",
 CellChangeTimes->{{3.7201806812072268`*^9, 3.7201807102576375`*^9}, 
   3.720180760919963*^9, 3.720180814671193*^9, 3.7201808597217245`*^9, 
   3.7201808998517656`*^9, 3.720180951924385*^9, {3.7201811286004467`*^9, 
   3.7201811358830495`*^9}, {3.7201812331628075`*^9, 3.720181266413066*^9}, {
   3.7201813029729223`*^9, 3.720181309405245*^9}, 3.720181343715704*^9, {
   3.7205390238347435`*^9, 3.7205390300602016`*^9}, {3.7205398100523005`*^9, 
   3.720539840675046*^9}, {3.720539881025199*^9, 3.720539901350582*^9}, {
   3.7205424942173176`*^9, 3.7205425264416704`*^9}, {3.720542572009139*^9, 
   3.720542593187086*^9}, {3.7205429051366215`*^9, 3.7205429244771004`*^9}, 
   3.7205429988341575`*^9, {3.720543080170542*^9, 3.7205430909548035`*^9}, {
   3.720546756227998*^9, 3.7205468012766066`*^9}, 3.7205469539513044`*^9, {
   3.720547170969454*^9, 3.7205472004917045`*^9}, 3.720547233399312*^9, {
   3.7205475944036803`*^9, 3.72054760736699*^9}, {3.720548146010747*^9, 
   3.7205482407286787`*^9}, {3.720548276534935*^9, 3.7205483117851048`*^9}, 
   3.720548363665493*^9, {3.7205484464263144`*^9, 3.7205484594437866`*^9}, 
   3.720548496971159*^9, 3.7205492467827663`*^9, 3.7205494696473274`*^9, 
   3.7205495418157325`*^9, 3.7205495786483793`*^9}],

Cell[BoxData["\<\"F:\\\\MarkII\\\\LongboardMarkII\\\\Ev Sensor Module\\\\Data\
\"\>"], "Output",
 CellChangeTimes->{{3.7201806812072268`*^9, 3.7201807102576375`*^9}, 
   3.720180760919963*^9, 3.720180814671193*^9, 3.7201808597217245`*^9, 
   3.7201808998517656`*^9, 3.720180951924385*^9, {3.7201811286004467`*^9, 
   3.7201811358830495`*^9}, {3.7201812331628075`*^9, 3.720181266413066*^9}, {
   3.7201813029729223`*^9, 3.720181309405245*^9}, 3.720181343715704*^9, {
   3.7205390238347435`*^9, 3.7205390300602016`*^9}, {3.7205398100523005`*^9, 
   3.720539840675046*^9}, {3.720539881025199*^9, 3.720539901350582*^9}, {
   3.7205424942173176`*^9, 3.7205425264416704`*^9}, {3.720542572009139*^9, 
   3.720542593187086*^9}, {3.7205429051366215`*^9, 3.7205429244771004`*^9}, 
   3.7205429988341575`*^9, {3.720543080170542*^9, 3.7205430909548035`*^9}, {
   3.720546756227998*^9, 3.7205468012766066`*^9}, 3.7205469539513044`*^9, {
   3.720547170969454*^9, 3.7205472004917045`*^9}, 3.720547233399312*^9, {
   3.7205475944036803`*^9, 3.72054760736699*^9}, {3.720548146010747*^9, 
   3.7205482407286787`*^9}, {3.720548276534935*^9, 3.7205483117851048`*^9}, 
   3.720548363665493*^9, {3.7205484464263144`*^9, 3.7205484594437866`*^9}, 
   3.720548496971159*^9, 3.7205492467827663`*^9, 3.7205494696473274`*^9, 
   3.7205495418157325`*^9, 3.720549578662919*^9}],

Cell[BoxData["\<\"Derp.JPEG\"\>"], "Output",
 CellChangeTimes->{{3.7201806812072268`*^9, 3.7201807102576375`*^9}, 
   3.720180760919963*^9, 3.720180814671193*^9, 3.7201808597217245`*^9, 
   3.7201808998517656`*^9, 3.720180951924385*^9, {3.7201811286004467`*^9, 
   3.7201811358830495`*^9}, {3.7201812331628075`*^9, 3.720181266413066*^9}, {
   3.7201813029729223`*^9, 3.720181309405245*^9}, 3.720181343715704*^9, {
   3.7205390238347435`*^9, 3.7205390300602016`*^9}, {3.7205398100523005`*^9, 
   3.720539840675046*^9}, {3.720539881025199*^9, 3.720539901350582*^9}, {
   3.7205424942173176`*^9, 3.7205425264416704`*^9}, {3.720542572009139*^9, 
   3.720542593187086*^9}, {3.7205429051366215`*^9, 3.7205429244771004`*^9}, 
   3.7205429988341575`*^9, {3.720543080170542*^9, 3.7205430909548035`*^9}, {
   3.720546756227998*^9, 3.7205468012766066`*^9}, 3.7205469539513044`*^9, {
   3.720547170969454*^9, 3.7205472004917045`*^9}, 3.720547233399312*^9, {
   3.7205475944036803`*^9, 3.72054760736699*^9}, {3.720548146010747*^9, 
   3.7205482407286787`*^9}, {3.720548276534935*^9, 3.7205483117851048`*^9}, 
   3.720548363665493*^9, {3.7205484464263144`*^9, 3.7205484594437866`*^9}, 
   3.720548496971159*^9, 3.7205492467827663`*^9, 3.7205494696473274`*^9, 
   3.7205495418157325`*^9, 3.7205495786769667`*^9}]
}, Open  ]],

Cell["\<\
Documentation: \
https://developers.google.com/maps/documentation/static-maps/intro?hl=en
Parameters:
center
\t{latitude,longitude}
zoom
\t1-15
size
\t{horizontal_value}x{vertical_value}
scale (for high res)
\tint
format (image type)
maptype
\troadmap
\tsatellite
\thybrid
\tterrain\
\>", "Text",
 CellChangeTimes->{{3.719826815339232*^9, 3.719826822681838*^9}, {
  3.7198280932713747`*^9, 3.719828223702992*^9}}]
}, Open  ]]
},
WindowSize->{732, 772},
WindowMargins->{{-6, Automatic}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 101, 1, 35, "Subsubsection"],
Cell[684, 25, 6616, 203, 309, "Input"],
Cell[7303, 230, 653, 17, 43, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7993, 252, 101, 1, 35, "Subsubsection"],
Cell[8097, 255, 726, 21, 82, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8860, 281, 102, 1, 35, "Subsubsection"],
Cell[8965, 284, 653, 15, 27, "Input"],
Cell[9621, 301, 938, 22, 64, "Input"],
Cell[10562, 325, 390, 11, 45, "Input"],
Cell[10955, 338, 839, 16, 27, "Input"],
Cell[11797, 356, 283, 7, 27, "Input"],
Cell[CellGroupData[{
Cell[12105, 367, 103, 1, 26, "Subsubsubsection"],
Cell[12211, 370, 874, 23, 64, "Input"],
Cell[13088, 395, 333, 8, 27, "Input"],
Cell[13424, 405, 324, 9, 27, "Input"],
Cell[13751, 416, 3365, 88, 286, "Input"],
Cell[CellGroupData[{
Cell[17141, 508, 128, 2, 27, "Input"],
Cell[17272, 512, 307, 5, 27, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17640, 524, 100, 1, 35, "Subsubsection"],
Cell[17743, 527, 1398, 31, 100, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19178, 563, 145, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[19348, 569, 159, 2, 26, "Subsubsubsection"],
Cell[19510, 573, 612, 12, 27, "Input"],
Cell[20125, 587, 769, 15, 64, "Input"],
Cell[CellGroupData[{
Cell[20919, 606, 2722, 58, 154, "Input"],
Cell[23644, 666, 1391, 18, 298, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25096, 691, 256, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[25377, 698, 1844, 27, 82, "Input"],
Cell[27224, 727, 1545, 20, 316, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28818, 753, 201, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[29044, 760, 1671, 25, 64, "Input"],
Cell[30718, 787, 34723, 570, 553, "Output"],
Cell[65444, 1359, 1347, 18, 27, "Output"],
Cell[66794, 1379, 1297, 17, 27, "Output"]
}, Open  ]],
Cell[68106, 1399, 423, 20, 309, "Text"]
}, Open  ]]
}
]
*)

