(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    121938,       2440]
NotebookOptionsPosition[    118884,       2336]
NotebookOutlinePosition[    119232,       2351]
CellTagsIndexPosition[    119189,       2348]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Raw Data", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540074110407*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<F:\\\\MarkII\\\\LongboardMarkII\\\\Ev Sensor \
Module\\\\Data\\\\Data1.csv\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RawTime", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringSplit", "[", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "\"\<:\>\""}], "]"}], 
        "]"}], "*", 
       RowBox[{"{", 
        RowBox[{"360", ",", "60", ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AccelerationX", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{".25", "*", 
        RowBox[{"(", 
         RowBox[{"i", "-", "2"}], ")"}]}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AccelerationY", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{".25", "*", 
        RowBox[{"(", 
         RowBox[{"i", "-", "2"}], ")"}]}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AccelerationZ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{".25", "*", 
        RowBox[{"(", 
         RowBox[{"i", "-", "2"}], ")"}]}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "5"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GPSLong", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{".25", "*", 
        RowBox[{"(", 
         RowBox[{"i", "-", "2"}], ")"}]}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "6"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GPSLat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{".25", "*", 
        RowBox[{"(", 
         RowBox[{"i", "-", "2"}], ")"}]}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "7"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GPSSpeed", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{".25", "*", 
        RowBox[{"(", 
         RowBox[{"i", "-", "2"}], ")"}]}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "8"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AccelerationXRaw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AccelerationYRaw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AccelerationZRaw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "5"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GPSLongRaw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "6"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GPSLatRaw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "7"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GPSSpeedRaw", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "8"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AccelerationMagRaw", "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["AccelerationXRaw", "2"], "+", 
     SuperscriptBox["AccelerationYRaw", "2"], "+", 
     SuperscriptBox["AccelerationZRaw", "2"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.719793373205928*^9, 3.7197933964793067`*^9}, {
   3.7197935350032153`*^9, 3.7197937088663607`*^9}, {3.7197939151560726`*^9, 
   3.719793951493676*^9}, {3.7197940801976714`*^9, 3.7197941685239925`*^9}, {
   3.719794214558133*^9, 3.719794269980385*^9}, {3.719828273631564*^9, 
   3.7198283519006147`*^9}, {3.720120114557767*^9, 3.7201201199463787`*^9}, {
   3.720120152278283*^9, 3.720120157103811*^9}, {3.7201202766373005`*^9, 
   3.7201203668557434`*^9}, {3.720120713590406*^9, 3.720120713802987*^9}, 
   3.720120755099354*^9, 3.7201207932717695`*^9, {3.720121395642148*^9, 
   3.72012139972248*^9}, {3.7201219188930006`*^9, 3.7201219190634756`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GPSCenter", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"Max", "[", "GPSLatRaw", "]"}], "+", 
       RowBox[{"Min", "[", "GPSLatRaw", "]"}]}], "2"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"Max", "[", "GPSLongRaw", "]"}], "+", 
       RowBox[{"Min", "[", "GPSLongRaw", "]"}]}], "2"]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7198282351171436`*^9, 3.7198282654171033`*^9}, {
   3.7198306887219844`*^9, 3.719830725900421*^9}, {3.719830992692263*^9, 
   3.7198310385674677`*^9}, {3.719832622278616*^9, 3.7198326255314703`*^9}, 
   3.7201202402111864`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Consts", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.7205400912563715`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "GoogleMapsAPIKey", "=", 
   "\"\<AIzaSyBQrB0NjQRQ48tdEuwrs9xfjye24E42Zls\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "ClientID", "=", 
   "\"\<808304395515-sr1olnp1ffgkff47g1ondchnukqqtbvd.apps.googleusercontent.\
com\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClientSecret", "=", "\"\<bsTRX11N-gStvtZWdRWAbAYs\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "URLCallInit", "=", 
   "\"\<https://maps.googleapis.com/maps/api/staticmap?\>\""}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.719825674446245*^9, 3.719825685897647*^9}, {
  3.7198259446899824`*^9, 3.719825946972705*^9}, {3.7198310971708775`*^9, 
  3.719831128435783*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540114020733*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListToString", "[", "someString_", "]"}], ":=", 
   RowBox[{"StringDelete", "[", 
    RowBox[{
     RowBox[{"ToString", "[", "someString", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<{\>\"", ",", "\"\<}\>\"", ",", "\"\< \>\"", ",", "\"\<, \>\""}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7198312567257085`*^9, 3.7198312572379866`*^9}, {
   3.71983131153093*^9, 3.719831315446422*^9}, {3.719831876976493*^9, 
   3.7198319505411935`*^9}, {3.7198336753006296`*^9, 
   3.7198336757644997`*^9}, {3.7198339967232113`*^9, 3.7198340019631414`*^9}, 
   3.7205418201168795`*^9, {3.7205506473222036`*^9, 3.7205506783132935`*^9}, {
   3.7205508029684753`*^9, 3.720550816600556*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GPSToString", "[", "someString_", "]"}], ":=", 
   RowBox[{"StringDelete", "[", 
    RowBox[{
     RowBox[{"ToString", "[", "someString", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<{\>\"", ",", "\"\<}\>\"", ",", "\"\< \>\""}], "}"}]}], 
    "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IntToHex", "[", "n_Integer", "]"}], ":=", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"ToString", "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"n", ",", "16"}], "]"}], "/.", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"10", ",", "15"}], "]"}], "\[Rule]", 
         RowBox[{"CharacterRange", "[", 
          RowBox[{"\"\<A\>\"", ",", "\"\<F\>\""}], "]"}]}], "]"}]}], ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7198312567257085`*^9, 3.7198312572379866`*^9}, {
   3.71983131153093*^9, 3.719831315446422*^9}, {3.719831876976493*^9, 
   3.7198319505411935`*^9}, {3.7198336753006296`*^9, 
   3.7198336757644997`*^9}, {3.7198339967232113`*^9, 
   3.7198340019631414`*^9}, {3.7205402152139626`*^9, 3.7205402914021063`*^9}, 
   3.7205404360552263`*^9, 3.7205418189927607`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NormalizeList", "[", "list_", "]"}], ":=", 
   FractionBox[
    RowBox[{"list", "-", 
     RowBox[{"Min", "[", "list", "]"}]}], 
    RowBox[{
     RowBox[{"Max", "[", "list", "]"}], "-", 
     RowBox[{"Min", "[", "list", "]"}]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.720541355723769*^9, 3.720541383291247*^9}, 
   3.7205418172361107`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"StretchListToRange", "[", 
    RowBox[{"list_", ",", "min_", ",", "max_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"NormalizeList", "[", "list", "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"max", "-", "min"}], ")"}]}], "+", "min"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7205404650603385`*^9, 3.7205405678150883`*^9}, {
  3.7205406175760975`*^9, 3.7205406184458284`*^9}, {3.7205406580204086`*^9, 
  3.720540659180056*^9}, {3.7205409427473464`*^9, 3.720540957955025*^9}, {
  3.7205414313357115`*^9, 3.7205414565312634`*^9}, {3.720541502272611*^9, 
  3.720541532777261*^9}, {3.7205415766527386`*^9, 3.7205416084425135`*^9}, {
  3.720541684117427*^9, 3.7205416845476007`*^9}, {3.7205417253226304`*^9, 
  3.7205417729783373`*^9}, {3.7205418098891897`*^9, 3.720541815724781*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InverseList", "[", "list_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Max", "[", "list", "]"}], "+", 
    RowBox[{"Min", "[", "list", "]"}], "-", "list"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720543338048983*^9, 3.72054334319762*^9}}],

Cell[CellGroupData[{

Cell["Encoded Polyline Algorithm Format", "Subsubsubsection",
 CellChangeTimes->{3.720543264505478*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TwosComplement", "[", 
   RowBox[{"n_", ",", "bits_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Positive", "[", "n", "]"}], ",", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"n", ",", "2", ",", "bits"}], "]"}], ",", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FromDigits", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerDigits", "[", 
           RowBox[{"n", ",", "2", ",", "bits"}], "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[Rule]", "0"}], ",", 
            RowBox[{"0", "\[Rule]", "1"}]}], "}"}]}], ",", "2"}], "]"}], "+", 
       "1"}], ",", "2", ",", "bits"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7205440141998186`*^9, 3.720544014202813*^9}, {
  3.7205442806178074`*^9, 3.7205442995799637`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LeftShiftList", "[", "list_", "]"}], ":=", 
  RowBox[{"Append", "[", 
   RowBox[{
    RowBox[{"Delete", "[", 
     RowBox[{"list", ",", "1"}], "]"}], ",", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7205443808554955`*^9, 3.720544401281557*^9}, {
  3.72054443731793*^9, 3.7205445101622467`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InvertBitList", "[", "list_", "]"}], ":=", 
   RowBox[{"list", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "0"}], ",", 
      RowBox[{"0", "\[Rule]", "1"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720544631593872*^9, 3.720544652623667*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EPAF", "[", "n_", " ", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "exampleLS", ",", "exampleLSInv", ",", "e62", ",", "e71", ",", "e81", 
       ",", "e91", ",", "e101", ",", "e111"}], "}"}], ",", 
     RowBox[{
      RowBox[{"exampleLS", "=", 
       RowBox[{"LeftShiftList", "[", 
        RowBox[{"TwosComplement", "[", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"n", "*", 
            SuperscriptBox["10", "5"]}], "]"}], ",", "32"}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"exampleLSInv", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Negative", "[", "n", "]"}], ",", 
         RowBox[{"exampleLS", "//", "InvertBitList"}], ",", "exampleLS"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"e62", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"exampleLSInv", ",", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "exampleLSInv", "]"}], "-", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"Length", "[", "exampleLSInv", "]"}], ",", "5"}], 
               "]"}]}], ")"}]}]}], "]"}], ",", "5"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "e62", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"e62", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"e62", "=", 
             RowBox[{"Delete", "[", 
              RowBox[{"e62", ",", "1"}], "]"}]}], ",", 
            RowBox[{"i", "--"}]}], "}"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"e71", "=", 
       RowBox[{"Reverse", "[", "e62", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"e81", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Prepend", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", "e71"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"e81", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"Length", "[", "e81", "]"}], ",", "1"}], "]"}], "]"}], "=", 
       "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"e91", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"FromDigits", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", "e81"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"e101", "=", 
       RowBox[{"e91", "+", "63"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"e111", "=", 
       RowBox[{"FromCharacterCode", "[", "e101", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "e111", "}"}]}]}], " ", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720548831431404*^9, 3.720548838728991*^9}, {
   3.7205488693115363`*^9, 3.7205492131938295`*^9}, {3.7205493133918476`*^9, 
   3.7205493170555725`*^9}, {3.720549532746683*^9, 3.7205495740930405`*^9}, 
   3.720549694446703*^9, {3.7205504473166137`*^9, 3.7205504485609407`*^9}, {
   3.7205506622750607`*^9, 3.7205506643898664`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EPAF", "[", "20", "]"}]], "Input",
 CellChangeTimes->{{3.7205490996144514`*^9, 3.720549104344372*^9}, {
  3.7205502875758953`*^9, 3.720550305683211*^9}}],

Cell[BoxData[
 RowBox[{"{", "\<\"_gayB\"\>", "}"}]], "Output",
 CellChangeTimes->{{3.720549104793782*^9, 3.720549151369006*^9}, {
   3.7205492157683783`*^9, 3.7205492457254515`*^9}, {3.7205493472966995`*^9, 
   3.7205493970395355`*^9}, 3.72054946887286*^9, 3.7205495407479773`*^9, 
   3.720549577886691*^9, {3.7205502880727224`*^9, 3.7205503059669633`*^9}, 
   3.7205503590197067`*^9, 3.7205506813479004`*^9, 3.7205508199827776`*^9, 
   3.7206271437495813`*^9, 3.7206271746027603`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Markers", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540102493376*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"markers", "=", 
   RowBox[{"ListToString", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<&markers=\\\\\\\\color:red%7Clabel:S%7C\>\"", ",", 
         RowBox[{"ToString", "[", 
          RowBox[{"GPSToString", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"NumberForm", "[", 
              RowBox[{
               RowBox[{"GPSLatRaw", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "10"}], "]"}], ",", 
             RowBox[{"NumberForm", "[", 
              RowBox[{
               RowBox[{"GPSLongRaw", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "10"}], "]"}]}], "}"}], 
           "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "GPSLatRaw", "]"}], ",", "10"}], "}"}]}], 
      "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.719833708474538*^9, 3.719833809218799*^9}, {
   3.719833913307587*^9, 3.719833913459858*^9}, {3.7198339446839476`*^9, 
   3.7198339698827467`*^9}, {3.719834010200912*^9, 3.71983402560921*^9}, {
   3.7198342273107204`*^9, 3.7198342309378033`*^9}, {3.719834268617344*^9, 
   3.7198342796670275`*^9}, {3.720122036907322*^9, 3.720122066273781*^9}, {
   3.7201221508836813`*^9, 3.7201221652216673`*^9}, 3.7205430109845533`*^9, 
   3.7205505015763483`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Paths", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540102493376*^9}, {
  3.7205418490533*^9, 3.720541850555877*^9}}],

Cell[CellGroupData[{

Cell["Color And Width", "Subsubsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540102493376*^9}, {
  3.720543020441346*^9, 3.72054302738922*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GPSSpeedRawWidth", "=", 
   RowBox[{"InverseList", "[", 
    RowBox[{"StretchListToRange", "[", 
     RowBox[{"GPSSpeedRaw", ",", "3", ",", "50"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.720539570377695*^9, 3.7205396671666384`*^9}, {
   3.7205397337541018`*^9, 3.720539759855663*^9}, {3.72053989375331*^9, 
   3.720539896208892*^9}, {3.720539997532828*^9, 3.720540058248207*^9}, {
   3.7205418946722155`*^9, 3.72054191855692*^9}, {3.7205429189771433`*^9, 
   3.720542919067172*^9}, 3.7205430146998158`*^9, {3.720543068090323*^9, 
   3.7205430867703104`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AccelerationMagRawFFFFFF", "=", 
  RowBox[{"Round", "[", 
   RowBox[{"StretchListToRange", "[", 
    RowBox[{"AccelerationMagRaw", ",", "0", ",", 
     RowBox[{
      RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "@", 
      "\"\<FFFFFF\>\""}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7206263090850286`*^9, 3.7206263541792927`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4378112", ",", "4393317", ",", "4448421", ",", "4360852", ",", "4583989", 
   ",", "4393034", ",", "4434545", ",", "4382457", ",", "4443975", ",", 
   "4414553", ",", "4450063", ",", "4365580", ",", "4616910", ",", "3719627", 
   ",", "3042624", ",", "5203728", ",", "5333497", ",", "5190821", ",", 
   "3901906", ",", "5271065", ",", "6971409", ",", "5433753", ",", "5088520", 
   ",", "5097560", ",", "4049774", ",", "4015914", ",", "4592922", ",", 
   "4370650", ",", "4639925", ",", "11188928", ",", "5704931", ",", "6035705",
    ",", "2855999", ",", "6540281", ",", "2174614", ",", "3461830", ",", 
   "5731257", ",", "2897202", ",", "7507726", ",", "5925765", ",", "4954907", 
   ",", "4558450", ",", "3719566", ",", "4733189", ",", "2881389", ",", 
   "6628888", ",", "1953542", ",", "8122903", ",", "4401440", ",", "4927191", 
   ",", "5348941", ",", "3732079", ",", "7889087", ",", "2906294", ",", 
   "5552178", ",", "3931719", ",", "4872774", ",", "5167241", ",", "3995011", 
   ",", "6334057", ",", "2447846", ",", "6470776", ",", "4662850", ",", 
   "4413885", ",", "4641963", ",", "3271329", ",", "14059373", ",", "2963405",
    ",", "8755892", ",", "2945916", ",", "8685583", ",", "3105190", ",", 
   "4350896", ",", "8365016", ",", "5831875", ",", "7856898", ",", "2453374", 
   ",", "7801833", ",", "2438602", ",", "3328185", ",", "5462080", ",", 
   "3314100", ",", "7842060", ",", "1255034", ",", "5150732", ",", "4406990", 
   ",", "3963340", ",", "5957507", ",", "3415155", ",", "8039403", ",", 
   "2737761", ",", "6027828", ",", "4492713", ",", "5195668", ",", "2692910", 
   ",", "3239369", ",", "7432768", ",", "1818220", ",", "6672974", ",", 
   "4394481", ",", "5908596", ",", "4745426", ",", "3615546", ",", "7133401", 
   ",", "2633228", ",", "4056223", ",", "10429301", ",", "6846390", ",", 
   "4198662", ",", "4598987", ",", "6777125", ",", "1652438", ",", "4239348", 
   ",", "1989026", ",", "6349283", ",", "4467967", ",", "3942180", ",", 
   "3448742", ",", "2889931", ",", "7224270", ",", "3965831", ",", "5352453", 
   ",", "5274864", ",", "4603791", ",", "4544858", ",", "3484928", ",", 
   "6995509", ",", "1658783", ",", "11970236", ",", "7382300", ",", "8111035",
    ",", "5217276", ",", "3202693", ",", "6428313", ",", "3836971", ",", 
   "7568746", ",", "3858035", ",", "6834757", ",", "1375294", ",", "4919995", 
   ",", "8914483", ",", "3130513", ",", "3977783", ",", "2502467", ",", 
   "7049757", ",", "2455862", ",", "6019444", ",", "4377888", ",", "4168457", 
   ",", "8641486", ",", "0", ",", "9427009", ",", "1083939", ",", "4136436", 
   ",", "2414746", ",", "5383069", ",", "4112584", ",", "3598087", ",", 
   "8341461", ",", "1621303", ",", "6394210", ",", "3794786", ",", "4383262", 
   ",", "4014427", ",", "2624621", ",", "6565331", ",", "5132763", ",", 
   "5673327", ",", "4541194", ",", "3915471", ",", "5986475", ",", "2290702", 
   ",", "6780491", ",", "5511242", ",", "4810862", ",", "7383816", ",", 
   "2722396", ",", "7278481", ",", "1316396", ",", "5817879", ",", "4776378", 
   ",", "4118467", ",", "7339637", ",", "4448930", ",", "7835076", ",", 
   "2915029", ",", "5880024", ",", "4641410", ",", "3515316", ",", "5002685", 
   ",", "2430476", ",", "11348175", ",", "2597902", ",", "4522765", ",", 
   "6784912", ",", "4035897", ",", "5831995", ",", "2824871", ",", "16777215",
    ",", "3311665"}], "}"}]], "Output",
 CellChangeTimes->{3.7206255686154847`*^9, 3.7206263101470547`*^9, 
  3.720626360729167*^9, 3.7206271437962217`*^9, 3.720627174647411*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxT", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "@", 
     "\"\<FFFFFF\>\""}], 
    RowBox[{"2", "\[Pi]"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7206264631683645`*^9, 3.7206264761139927`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"maxT", "*", 
     RowBox[{"AccelerationMagRawFFFFFF", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{
     RowBox[{"maxT", "*", 
      RowBox[{"AccelerationMagRawFFFFFF", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "-", 
     RowBox[{"maxT", "*", 
      FractionBox["1", "3"]}]}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{
     RowBox[{"maxT", "*", 
      RowBox[{"AccelerationMagRawFFFFFF", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "-", 
     RowBox[{"maxT", "*", 
      FractionBox["2", "3"]}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7206265103531733`*^9, 3.7206265515205927`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", 
    FractionBox["36726263159040", "\[Pi]"], "]"}], ",", 
   RowBox[{"Cos", "[", 
    FractionBox["73452520725675", 
     RowBox[{"2", " ", "\[Pi]"}]], "]"}], ",", 
   RowBox[{"Cos", "[", 
    FractionBox["36726257566635", "\[Pi]"], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.720626551937703*^9, 3.720627143828328*^9, 
  3.720627174677458*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AccelerationMagRawColor", "=", 
  RowBox[{"ListToString", "/@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"IntToHex", "/@", 
      RowBox[{"Round", "[", 
       RowBox[{
        FractionBox["255", "2"], "*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"maxT", "*", 
              RowBox[{"AccelerationMagRawFFFFFF", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "-", 
             RowBox[{"maxT", "*", 
              FractionBox["2", "3"]}]}], "]"}], "+", "1"}], ",", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"maxT", "*", 
              RowBox[{"AccelerationMagRawFFFFFF", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "-", 
             RowBox[{"maxT", "*", 
              FractionBox["1", "3"]}]}], "]"}], "+", "1"}], ",", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"maxT", "*", 
             RowBox[{"AccelerationMagRawFFFFFF", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "+", "1"}]}], "}"}]}], 
       "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "AccelerationMagRawFFFFFF", "]"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7206263882658386`*^9, 3.7206265208168187`*^9}, {
  3.7206265614429665`*^9, 3.7206265746171017`*^9}, {3.7206266330180407`*^9, 
  3.7206266529746475`*^9}, {3.7206267048056393`*^9, 3.720626716379079*^9}, {
  3.7206268283751144`*^9, 3.7206268726404305`*^9}, {3.7206269232660837`*^9, 
  3.72062692622806*^9}, {3.7206271349642377`*^9, 3.720627136233096*^9}, {
  3.7206271710896034`*^9, 3.720627194288896*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"FB4CFB\"\>", ",", "\<\"7B27B\"\>", ",", "\<\"DC1BDC\"\>", 
   ",", "\<\"FC87FC\"\>", ",", "\<\"BEE4BE\"\>", ",", "\<\"4724\"\>", 
   ",", "\<\"56F5\"\>", ",", "\<\"F898F8\"\>", ",", "\<\"EC2DEC\"\>", 
   ",", "\<\"FF6CFF\"\>", ",", "\<\"CBDACB\"\>", ",", "\<\"21E221\"\>", 
   ",", "\<\"FD84FD\"\>", ",", "\<\"1ADB1A\"\>", ",", "\<\"63963\"\>", 
   ",", "\<\"ECAE\"\>", ",", "\<\"194419\"\>", ",", "\<\"C4DFC4\"\>", 
   ",", "\<\"4BFA4B\"\>", ",", "\<\"A92A9\"\>", ",", "\<\"19D919\"\>", 
   ",", "\<\"A7F2A7\"\>", ",", "\<\"263326\"\>", ",", "\<\"FF6AFF\"\>", 
   ",", "\<\"B96B9\"\>", ",", "\<\"08C0\"\>", ",", "\<\"7A27A\"\>", 
   ",", "\<\"37F237\"\>", ",", "\<\"FC50FC\"\>", ",", "\<\"EE31EE\"\>", 
   ",", "\<\"88FC88\"\>", ",", "\<\"DACBDA\"\>", ",", "\<\"DA1ADA\"\>", 
   ",", "\<\"08E0\"\>", ",", "\<\"76376\"\>", ",", "\<\"4714\"\>", 
   ",", "\<\"D516D5\"\>", ",", "\<\"C1E2C1\"\>", ",", "\<\"7BC7\"\>", 
   ",", "\<\"80180\"\>", ",", "\<\"EC9E\"\>", ",", "\<\"69FF69\"\>", 
   ",", "\<\"37F237\"\>", ",", "\<\"134D13\"\>", ",", "\<\"08A0\"\>", 
   ",", "\<\"FC8AFC\"\>", ",", "\<\"F845F8\"\>", ",", "\<\"7677\"\>", 
   ",", "\<\"60A60\"\>", ",", "\<\"5CFE5C\"\>", ",", "\<\"09C0\"\>", 
   ",", "\<\"41F741\"\>", ",", "\<\"86FC86\"\>", ",", "\<\"A7F2A7\"\>", 
   ",", "\<\"A60A\"\>", ",", "\<\"F993F9\"\>", ",", "\<\"C9EC9\"\>", 
   ",", "\<\"2E2B2E\"\>", ",", "\<\"1A01\"\>", ",", "\<\"105310\"\>", 
   ",", "\<\"E8B8E8\"\>", ",", "\<\"6FFF6F\"\>", ",", "\<\"F896F8\"\>", 
   ",", "\<\"E727E7\"\>", ",", "\<\"C8DDC8\"\>", ",", "\<\"ECAE\"\>", 
   ",", "\<\"B35B3\"\>", ",", "\<\"EBB3EB\"\>", ",", "\<\"08C0\"\>", 
   ",", "\<\"71FF71\"\>", ",", "\<\"134E13\"\>", ",", "\<\"4B04\"\>", 
   ",", "\<\"EFACEF\"\>", ",", "\<\"194319\"\>", ",", "\<\"09B0\"\>", 
   ",", "\<\"FF65FF\"\>", ",", "\<\"CBFCB\"\>", ",", "\<\"CE10CE\"\>", 
   ",", "\<\"39F339\"\>", ",", "\<\"EEAFEE\"\>", ",", "\<\"3B1F3B\"\>", 
   ",", "\<\"74FF74\"\>", ",", "\<\"42F742\"\>", ",", "\<\"5CFE5C\"\>", 
   ",", "\<\"ED2FED\"\>", ",", "\<\"1861\"\>", ",", "\<\"7EFE7E\"\>", 
   ",", "\<\"8BFB8B\"\>", ",", "\<\"7BA7\"\>", ",", "\<\"37F237\"\>", 
   ",", "\<\"F845F8\"\>", ",", "\<\"FF6FFF\"\>", ",", "\<\"5EB5E\"\>", 
   ",", "\<\"CBDACB\"\>", ",", "\<\"5B55\"\>", ",", "\<\"F4A3F4\"\>", 
   ",", "\<\"FF68FF\"\>", ",", "\<\"0900\"\>", ",", "\<\"C5BC5\"\>", 
   ",", "\<\"B04B0\"\>", ",", "\<\"0990\"\>", ",", "\<\"E0C4E0\"\>", 
   ",", "\<\"2CEB2C\"\>", ",", "\<\"6C66C\"\>", ",", "\<\"FA92FA\"\>", 
   ",", "\<\"74FF74\"\>", ",", "\<\"9F19F\"\>", ",", "\<\"243524\"\>", 
   ",", "\<\"82FD82\"\>", ",", "\<\"E2C1E2\"\>", ",", "\<\"51FC51\"\>", 
   ",", "\<\"4B04\"\>", ",", "\<\"40F640\"\>", ",", "\<\"8B08B\"\>", 
   ",", "\<\"174717\"\>", ",", "\<\"1A21\"\>", ",", "\<\"31EE31\"\>", 
   ",", "\<\"8C08C\"\>", ",", "\<\"71FF71\"\>", ",", "\<\"88FC88\"\>", 
   ",", "\<\"D6D0D6\"\>", ",", "\<\"E5BDE5\"\>", ",", "\<\"E828E8\"\>", 
   ",", "\<\"B45B4\"\>", ",", "\<\"FC53FC\"\>", ",", "\<\"F55F\"\>", 
   ",", "\<\"105210\"\>", ",", "\<\"C5CC\"\>", ",", "\<\"DC9D\"\>", 
   ",", "\<\"6A66A\"\>", ",", "\<\"A31A3\"\>", ",", "\<\"292F29\"\>", 
   ",", "\<\"A0F4A0\"\>", ",", "\<\"CDD8CD\"\>", ",", "\<\"A21A2\"\>", 
   ",", "\<\"511151\"\>", ",", "\<\"F033F0\"\>", ",", "\<\"4B144B\"\>", 
   ",", "\<\"63FF63\"\>", ",", "\<\"F53EF5\"\>", ",", "\<\"5CFE5C\"\>", 
   ",", "\<\"DBC9DB\"\>", ",", "\<\"B14B1\"\>", ",", "\<\"F237F2\"\>", 
   ",", "\<\"2CEB2C\"\>", ",", "\<\"71FF71\"\>", ",", "\<\"DF1EDF\"\>", 
   ",", "\<\"C1E2C1\"\>", ",", "\<\"DB1BDB\"\>", ",", "\<\"85185\"\>", 
   ",", "\<\"FF6DFF\"\>", ",", "\<\"54F54\"\>", ",", "\<\"EA2AEA\"\>", 
   ",", "\<\"2A82\"\>", ",", "\<\"2CEB2C\"\>", ",", "\<\"58D58\"\>", 
   ",", "\<\"93093\"\>", ",", "\<\"C5DFC5\"\>", ",", "\<\"164816\"\>", 
   ",", "\<\"FE7EFE\"\>", ",", "\<\"7BA7\"\>", ",", "\<\"8F08F\"\>", 
   ",", "\<\"9629\"\>", ",", "\<\"11CF11\"\>", ",", "\<\"FA4BFA\"\>", 
   ",", "\<\"BEE4BE\"\>", ",", "\<\"7FFE7F\"\>", ",", "\<\"FE60FE\"\>", 
   ",", "\<\"2B2D2B\"\>", ",", "\<\"2A62\"\>", ",", "\<\"2E2B2E\"\>", 
   ",", "\<\"105310\"\>", ",", "\<\"D6CFD6\"\>", ",", "\<\"34F034\"\>", 
   ",", "\<\"61A61\"\>", ",", "\<\"1D3E1D\"\>", ",", "\<\"DD1CDD\"\>", 
   ",", "\<\"3D1E3D\"\>", ",", "\<\"C9DCC9\"\>", ",", "\<\"54F54\"\>", 
   ",", "\<\"18D918\"\>", ",", "\<\"AD3AD\"\>", ",", "\<\"0950\"\>", 
   ",", "\<\"1851\"\>", ",", "\<\"EF32EF\"\>", ",", "\<\"4DFB4D\"\>", 
   ",", "\<\"FF73FF\"\>", ",", "\<\"12D012\"\>", ",", "\<\"E8B9E8\"\>", 
   ",", "\<\"3753\"\>", ",", "\<\"EE30EE\"\>", ",", "\<\"FA4CFA\"\>", 
   ",", "\<\"D616D6\"\>", ",", "\<\"4734\"\>", ",", "\<\"124F12\"\>", 
   ",", "\<\"421A42\"\>", ",", "\<\"F947F9\"\>", ",", "\<\"B5EAB5\"\>", 
   ",", "\<\"DFC5DF\"\>", ",", "\<\"40F640\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.720626818267789*^9, 3.720626873499155*^9}, 
   3.720626926772335*^9, {3.7206271372150087`*^9, 3.720627174736615*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"paths", "=", 
  RowBox[{"ListToString", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<&path=color:\>\"", ",", "\"\<0x\>\"", ",", 
        RowBox[{"AccelerationMagRawColor", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<%7Cweight:\>\"", ",", 
        RowBox[{"Round", "[", 
         RowBox[{"GPSSpeedRawWidth", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\"\<%7C\>\"", ",", 
        RowBox[{"ToString", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"GPSToString", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"GPSLatRaw", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "10"}], "]"}], ",", 
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"GPSLongRaw", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "10"}], "]"}]}], "}"}], 
            "]"}], ",", "\"\<%7C\>\"", ",", 
           RowBox[{"GPSToString", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"GPSLatRaw", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "-", "10"}], "]"}], "]"}], ",", "10"}], "]"}], 
              ",", 
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"GPSLongRaw", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "-", "10"}], "]"}], "]"}], ",", "10"}], 
               "]"}]}], "}"}], "]"}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "12", ",", 
        RowBox[{"Length", "[", "GPSLatRaw", "]"}], ",", "10"}], "}"}]}], 
     "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.720180390948539*^9, 3.720180394112673*^9}, 
   3.720180424822009*^9, {3.7201804995835314`*^9, 3.7201805607123594`*^9}, {
   3.720180595915552*^9, 3.7201806163219547`*^9}, {3.720180701809491*^9, 
   3.720180705294445*^9}, {3.720180807607481*^9, 3.7201808077850704`*^9}, {
   3.720180844822281*^9, 3.720180856341687*^9}, {3.720180897355769*^9, 
   3.720180948306083*^9}, {3.720181124833641*^9, 3.720181257381939*^9}, {
   3.7201812976315575`*^9, 3.7201813196778464`*^9}, {3.7205394902570157`*^9, 
   3.7205395150518193`*^9}, {3.720539793336166*^9, 3.7205398366914234`*^9}, {
   3.720539874032898*^9, 3.7205398776761303`*^9}, {3.7205399869300375`*^9, 
   3.720540002498931*^9}, {3.720542462721394*^9, 3.720542522813207*^9}, {
   3.720542564764391*^9, 3.7205425904916205`*^9}, {3.7205430309392586`*^9, 
   3.7205430457956696`*^9}, 3.7205499712938795`*^9, 3.7205501779966855`*^9, {
   3.720550505081148*^9, 3.7205505079346085`*^9}, {3.7205508789299498`*^9, 
   3.720550904105995*^9}, {3.720553615084524*^9, 3.7205536555149145`*^9}}],

Cell[BoxData["\<\"&path=color:0x21E221%7Cweight:50%7C38.65098,-90.31356%7C38.\
65098,-90.31356&path=color:0xA7F2A7%7Cweight:49%7C38.65098,-90.31356%7C38.\
65098,-90.31356&path=color:0xDACBDA%7Cweight:16%7C38.65099,-90.31355%7C38.\
65098,-90.31356&path=color:0x69FF69%7Cweight:9%7C38.65101,-90.31354%7C38.\
65099,-90.31355&path=color:0x41F741%7Cweight:10%7C38.65103,-90.31352%7C38.\
65101,-90.31354&path=color:0x6FFF6F%7Cweight:10%7C38.65105,-90.31351%7C38.\
65103,-90.31352&path=color:0x4B04%7Cweight:9%7C38.65108,-90.31351%7C38.65105,-\
90.31351&path=color:0x74FF74%7Cweight:10%7C38.6511,-90.3135%7C38.65108,-90.\
31351&path=color:0xFF6FFF%7Cweight:11%7C38.65112,-90.31349%7C38.6511,-90.3135&\
path=color:0xE0C4E0%7Cweight:6%7C38.65115,-90.31348%7C38.65112,-90.31349&path=\
color:0x4B04%7Cweight:5%7C38.65117,-90.31347%7C38.65115,-90.31348&path=color:\
0xE5BDE5%7Cweight:7%7C38.65119,-90.31345%7C38.65117,-90.31347&path=color:\
0x292F29%7Cweight:9%7C38.65119,-90.31341%7C38.65119,-90.31345&path=color:\
0xDBC9DB%7Cweight:6%7C38.65117,-90.3134%7C38.65119,-90.31341&path=color:\
0x54F54%7Cweight:13%7C38.65116,-90.31337%7C38.65117,-90.3134&path=color:\
0x8F08F%7Cweight:8%7C38.65115,-90.31334%7C38.65116,-90.31337&path=color:\
0x105310%7Cweight:12%7C38.65115,-90.31329%7C38.65115,-90.31334&path=color:\
0xAD3AD%7Cweight:11%7C38.65115,-90.31327%7C38.65115,-90.31329&path=color:\
0xFA4CFA%7Cweight:10%7C38.65115,-90.31324%7C38.65115,-90.31327\"\>"], "Output",
 CellChangeTimes->{
  3.7205499717686424`*^9, 3.7205503647904377`*^9, 3.7205506814170833`*^9, 
   3.7205508200691137`*^9, 3.7205511753780875`*^9, {3.7205536344615803`*^9, 
   3.720553664020727*^9}, 3.72062694202785*^9, {3.720627143893999*^9, 
   3.7206271747536936`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["URL Formation", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540102493376*^9}, {
  3.7205418490533*^9, 3.720541850555877*^9}, {3.7205429521091285`*^9, 
  3.7205429535117865`*^9}, {3.7205429886043215`*^9, 3.7205429937995467`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imageWidth", "=", "600"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imageHeight", "=", "600"}], ";"}]}], "Input",
 CellChangeTimes->{{3.720623765372404*^9, 3.7206237789715977`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApiCallTestPath", "=", 
  RowBox[{"StringJoin", "[", 
   RowBox[{"{", 
    RowBox[{"URLCallInit", ",", "\"\<center=\>\"", ",", 
     RowBox[{"ListToString", "[", "GPSCenter", "]"}], ",", "\"\<&zoom=\>\"", 
     ",", "\"\<20\>\"", ",", "\"\<&size=\>\"", ",", 
     RowBox[{"ToString", "[", "imageWidth", "]"}], ",", "\"\<x\>\"", ",", 
     RowBox[{"ToString", "[", "imageHeight", "]"}], ",", "\"\<&maptype=\>\"", 
     ",", "\"\<roadmap\>\"", ",", 
     RowBox[{"ToString", "[", "paths", "]"}], ",", "\"\<&key=\>\"", ",", 
     "GoogleMapsAPIKey"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7198311332040005`*^9, 3.7198311791053233`*^9}, {
   3.7198312273903503`*^9, 3.719831249992202*^9}, 3.7198313406010847`*^9, {
   3.719831592972476*^9, 3.719831694702219*^9}, {3.719831973376526*^9, 
   3.719832103850774*^9}, {3.719832144223005*^9, 3.7198321534258194`*^9}, {
   3.719832298421966*^9, 3.7198322997873955`*^9}, {3.719832407218625*^9, 
   3.719832457690921*^9}, {3.7198326525221806`*^9, 3.7198326892543993`*^9}, {
   3.719832849790996*^9, 3.7198329787872376`*^9}, {3.719833021839307*^9, 
   3.719833021970642*^9}, {3.719833249342827*^9, 3.719833259063267*^9}, {
   3.719833389084715*^9, 3.719833417881795*^9}, {3.7198335025335474`*^9, 
   3.7198335060808563`*^9}, {3.719833567432327*^9, 3.719833603261858*^9}, {
   3.7198336828849554`*^9, 3.7198336873746896`*^9}, {3.7198340754292655`*^9, 
   3.7198341157894115`*^9}, {3.719834346893022*^9, 3.7198343485518165`*^9}, {
   3.7201211445267*^9, 3.7201211739767923`*^9}, {3.7201212939881487`*^9, 
   3.720121309142897*^9}, {3.7201213435275965`*^9, 3.720121345737136*^9}, {
   3.720121506949396*^9, 3.7201215358718557`*^9}, {3.7201219958021407`*^9, 
   3.7201220001096215`*^9}, {3.720180648747548*^9, 3.7201806792297163`*^9}, {
   3.7205390283675065`*^9, 3.7205390287791033`*^9}, {3.720542987242483*^9, 
   3.7205429954896784`*^9}, 3.72054323379998*^9, 3.7205499621228247`*^9, 
   3.720551375215372*^9, 3.7205535863237505`*^9, {3.7206237840430307`*^9, 
   3.7206238391722317`*^9}}],

Cell[BoxData["\<\"https://maps.googleapis.com/maps/api/staticmap?center=38.\
6511-90.3134&zoom=20&size=600x600&maptype=roadmap&path=color:0x21E221%\
7Cweight:50%7C38.65098,-90.31356%7C38.65098,-90.31356&path=color:0xA7F2A7%\
7Cweight:49%7C38.65098,-90.31356%7C38.65098,-90.31356&path=color:0xDACBDA%\
7Cweight:16%7C38.65099,-90.31355%7C38.65098,-90.31356&path=color:0x69FF69%\
7Cweight:9%7C38.65101,-90.31354%7C38.65099,-90.31355&path=color:0x41F741%\
7Cweight:10%7C38.65103,-90.31352%7C38.65101,-90.31354&path=color:0x6FFF6F%\
7Cweight:10%7C38.65105,-90.31351%7C38.65103,-90.31352&path=color:0x4B04%\
7Cweight:9%7C38.65108,-90.31351%7C38.65105,-90.31351&path=color:0x74FF74%\
7Cweight:10%7C38.6511,-90.3135%7C38.65108,-90.31351&path=color:0xFF6FFF%\
7Cweight:11%7C38.65112,-90.31349%7C38.6511,-90.3135&path=color:0xE0C4E0%\
7Cweight:6%7C38.65115,-90.31348%7C38.65112,-90.31349&path=color:0x4B04%\
7Cweight:5%7C38.65117,-90.31347%7C38.65115,-90.31348&path=color:0xE5BDE5%\
7Cweight:7%7C38.65119,-90.31345%7C38.65117,-90.31347&path=color:0x292F29%\
7Cweight:9%7C38.65119,-90.31341%7C38.65119,-90.31345&path=color:0xDBC9DB%\
7Cweight:6%7C38.65117,-90.3134%7C38.65119,-90.31341&path=color:0x54F54%\
7Cweight:13%7C38.65116,-90.31337%7C38.65117,-90.3134&path=color:0x8F08F%\
7Cweight:8%7C38.65115,-90.31334%7C38.65116,-90.31337&path=color:0x105310%\
7Cweight:12%7C38.65115,-90.31329%7C38.65115,-90.31334&path=color:0xAD3AD%\
7Cweight:11%7C38.65115,-90.31327%7C38.65115,-90.31329&path=color:0xFA4CFA%\
7Cweight:10%7C38.65115,-90.31324%7C38.65115,-90.31327&key=\
AIzaSyBQrB0NjQRQ48tdEuwrs9xfjye24E42Zls\"\>"], "Output",
 CellChangeTimes->{
  3.7205499631520624`*^9, 3.720550364813507*^9, 3.7205506814301176`*^9, 
   3.7205508200851555`*^9, {3.720551054656842*^9, 3.7205510752217712`*^9}, 
   3.7205511806378574`*^9, 3.720551302034176*^9, 3.7205513817077656`*^9, 
   3.7205514536925535`*^9, 3.7205535883151107`*^9, {3.7205536376752625`*^9, 
   3.7205536664986057`*^9}, {3.720623812096779*^9, 3.720623840501954*^9}, 
   3.7206269551492496`*^9, 3.720627143921545*^9, 3.720627174783779*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["API Call", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540102493376*^9}, {
  3.7205418490533*^9, 3.720541850555877*^9}, {3.7205429521091285`*^9, 
  3.7205429535117865`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ImageTestPath", "=", 
  RowBox[{"Import", "[", "ApiCallTestPath", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<F:\\\\MarkII\\\\LongboardMarkII\\\\Ev Sensor Module\\\\Data\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Derp.JPEG\>\"", ",", "ImageTestPath"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7198311332040005`*^9, 3.7198311791053233`*^9}, {
   3.7198312273903503`*^9, 3.719831249992202*^9}, 3.7198313406010847`*^9, {
   3.719831592972476*^9, 3.719831694702219*^9}, {3.719831973376526*^9, 
   3.719832103850774*^9}, {3.719832144223005*^9, 3.7198321534258194`*^9}, {
   3.719832298421966*^9, 3.7198322997873955`*^9}, {3.719832407218625*^9, 
   3.719832457690921*^9}, {3.7198326525221806`*^9, 3.7198326892543993`*^9}, {
   3.719832849790996*^9, 3.7198329787872376`*^9}, {3.719833021839307*^9, 
   3.719833021970642*^9}, {3.719833249342827*^9, 3.719833259063267*^9}, {
   3.719833389084715*^9, 3.719833417881795*^9}, {3.7198335025335474`*^9, 
   3.7198335060808563`*^9}, {3.719833567432327*^9, 3.719833603261858*^9}, {
   3.7198336828849554`*^9, 3.7198336873746896`*^9}, {3.7198340754292655`*^9, 
   3.7198341157894115`*^9}, {3.719834346893022*^9, 3.7198343485518165`*^9}, {
   3.7201211445267*^9, 3.7201211739767923`*^9}, {3.7201212939881487`*^9, 
   3.720121309142897*^9}, {3.7201213435275965`*^9, 3.720121345737136*^9}, {
   3.720121506949396*^9, 3.7201215358718557`*^9}, {3.7201219958021407`*^9, 
   3.7201220001096215`*^9}, {3.720180648747548*^9, 3.7201806792297163`*^9}, {
   3.7205390283675065`*^9, 3.7205390287791033`*^9}, {3.7205429842458467`*^9, 
   3.7205429977792325`*^9}, {3.720622982001713*^9, 3.7206229828737183`*^9}, 
   3.7206236126533594`*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvVuwJNd1nqnwxETMPDhiwjMxL/M045d58ZPtsCLsCNmSLdvwOGhaQ1mm
AyIpS+IMZdO8oGXCFEiIBEWBICxQIRs9hEhKaIAk7mCTHWrwAlCQGoGrgDAg
AI1Gd+M0dje6GgeF7gRFmDUPx+vU6rO4z87MXXnda1/+P77uqJOVlZWVlbn/
WnuvtfN//6V/989/9S/9xE/8xEf/B/rvn7/v3/+9j3zkfVf/3P9Ef7zrgx/9
f9//wV/55X/8wat+5f2/8pGf/KX/jhb+wl/if7uPjx49euDAgbff/oudJvGz
J06ccJbTwoMHDza+xK+2DUJQGK1WKzrbq6paLreJxVqnT58CwOZHy++CciA7
I2NqazTYtow57Sy3fZBM7cCeaGF95foG22y3vubBtY7efxP96bgn/UkLqSnb
uCkI6iI6LR2LpJNZvUEGKqi3zCAkfh9sfPbpJ3Ydiv7f2TNBWu3EWry+eNNl
F9tztLYNet6aXssbEZ8VD+XNwgehALItkkNIWGTeqLfMICT+Hk7bgES2H5Eb
kmR9ahzYvPhPO07khY4Pss01dpPWHVM89/Jr77+po6VC0EziXlYCvayZ0dha
/smX/6V6iw3mwO+DYmESl5HI+9o6NqkpcHzQjuB2rA5VWshOx3Fl21s7C+1+
2u6hJQSFFwYik6beVP7wpc/ed+3foP8bG9KrfuH/fOBrvy5/0mNaot68T8i5
F7/6wZ/7q/Xl177/b7W9RJ76Fz/5P6rvvx/bturamA9DliQxo4itjRqB+sZ3
l9x/k7yqzQTb3tpOs2FT7tIiQVBUqg9EwiJjw2kn/+vrD9x645Xkg/Q/Pa43
pNTUk/FdPHuYHtP/9Dj+xr8XD9798Zs/+Y7GD972koSOgMcHG42svgJ3bNLl
zIkr4lPcjWm/nKNF8U1PRk3bW3NfKI8J2kbJxkqS3eiSigNBsQkDkZHgtJPP
PHgjmSA9oP/pcWObf/tN733kyHX0mP6/9tpPsgs8/+h/vuZf//X3/N2/8v4r
/jeyEl6TFv7yz/6vH7vyr5nnb7c3cuHlu677tb/93r/3P9NL+Cla+fCX/y2t
6Tw+f+IOXpP+p8f1NZ3do2iOtkn7QIGq8yy/Kfv48cf/v8aNE2SCtP/00d79
d/4yQSvTp6BXMfVPaj/F/9ffiB5/++u/Tm9Ee0U7T6/lA9jloE11rBhxpXrC
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
7YWT9CpBqi0aG0beK67cr1tJ3QftLQt8F0WZCWdja9z9TdlKuE7E+VDVuvaE
SyzbfJAPYP1oTLuH/p23J4mdZJuKPkhtGpugQLboWX9R2OBgG9///oNiUr94
7cfD1A82WuE//IWjjWWPjSb41PeeGOODZIJIFo1K4jX2EqmzCGOIO3v3GWTj
ICMWm5PmemXNO7rY74O0Pjen7INSWtjog+KY7CCyZmNsxe/Cj+XeiPKnbL/a
Hw/a78K7LTPhyGvFCwa/qe2DsnH+k8NkWpOPSZsPSg+zvav2n867N+6hc+ga
bwpZD/Bly2yCHDLLt2xvSl4ytz+OTBbdOnnS8cFXXvJ1ilZJTac2Kw8/9cef
ve4zc9ufY4VOByk5o6f2//O/vpQ+Up5S5vyR14jlt5cD2H5sG5FgbLI7RR3Z
1Q1hfJDbbWkVq73cGPvWEtzIr/b3i4r18Hb4hXYrV/fB1f7RRn4t2SKHnxxP
yayni73OWI6dJUS1rVDaf3kXWcJWZd850TaCwW/q+CBvkMNAPqT13wN1H5Ra
FX45LecX8gF33r1tD+1PwQeTbwrJC3f2eoade0fyb7D6Nu11aIPde5UHsxhd
NCGdoj9m6sFBdcOajzNbpx545MhtD/xhYL7yjTsJcuEXXtjaCM8PIPscspWG
5pZ0iratYPb6S81syaW8fft+u3YrzT5i+yC3kNKVx60ury8vdBr/ug+yvXIr
LTEOv5yntXEa52o9mw1vQQy0cRRS3mVpdZnSwoNrTfimjT7IS9h6Gg+FJx5c
7fXucqBdf/dGH6x/ip29m0LKbxV+7BwB/tLr27R/n0jv7qw+aEYXTbgm+Oxp
/+zNq56Vg6vsBgdTJ1QLDc0uU+sU9Wi+8ND2QTaOvj5o1nN00//cgHt8kBt5
ecDNkR2NrvZ6Vnf2d9aRv0jjzB5aH/Lz+KDMAscfbZI3rfeL8hHg7W/0QT6A
gr0bbe/O34K9h22fwvYy9sG2I2D/JJD3laDeDq7n88GRRRP1TtHJBwer+KZT
K5x5m2YooDjDpLFTtE1mhvBQmsTBPigNJref9dhBGlWKR+jzcpedbT18D0TG
thIZCON94/CZl/fyQV7ZdoHxb9qYJyMR2WAftIcy6+/u7GHbp7AnfW07AvKl
r/aPOdq7ISY7nwkuRyfJvHrilV6Dg4v+PrjMdHAwXWZrlaHQ4sHBYXeTnzA8
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
TNU7WhXgg9q2UJzgg/DBXvw3EsspSg==
    "], {{0, 600}, {600, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{600, 600},
  PlotRange->{{0, 600}, {0, 600}}]], "Output",
 CellChangeTimes->{{3.7201806812072268`*^9, 3.7201807102576375`*^9}, 
   3.720180760919963*^9, 3.720180814671193*^9, 3.7201808597217245`*^9, 
   3.7201808998517656`*^9, 3.720180951924385*^9, {3.7201811286004467`*^9, 
   3.7201811358830495`*^9}, {3.7201812331628075`*^9, 3.720181266413066*^9}, {
   3.7201813029729223`*^9, 3.720181309405245*^9}, 3.720181343715704*^9, {
   3.7205390238347435`*^9, 3.7205390300602016`*^9}, {3.7205398100523005`*^9, 
   3.720539840675046*^9}, {3.720539881025199*^9, 3.720539901350582*^9}, {
   3.7205424942173176`*^9, 3.7205425264416704`*^9}, {3.720542572009139*^9, 
   3.720542593187086*^9}, {3.7205429051366215`*^9, 3.7205429244771004`*^9}, 
   3.7205429988341575`*^9, {3.720543080170542*^9, 3.7205430909548035`*^9}, {
   3.720546756227998*^9, 3.7205468012766066`*^9}, 3.7205469539513044`*^9, {
   3.720547170969454*^9, 3.7205472004917045`*^9}, 3.720547233399312*^9, {
   3.7205475944036803`*^9, 3.72054760736699*^9}, {3.720548146010747*^9, 
   3.7205482407286787`*^9}, {3.720548276534935*^9, 3.7205483117851048`*^9}, 
   3.720548363665493*^9, {3.7205484464263144`*^9, 3.7205484594437866`*^9}, 
   3.720548496971159*^9, 3.7205492467827663`*^9, 3.7205494696473274`*^9, 
   3.7205495418157325`*^9, 3.7205495786483793`*^9, 3.7205503660292344`*^9, 
   3.7205506819054804`*^9, 3.720550820613059*^9, {3.7205510568524275`*^9, 
   3.720551077031358*^9}, 3.7205511837298255`*^9, 3.720551304631074*^9, 
   3.7205513840142713`*^9, 3.7205514557396884`*^9, 3.7205524382136765`*^9, 
   3.720552608178672*^9, 3.720552839846402*^9, 3.7205535995225387`*^9, {
   3.720553639918953*^9, 3.72055366880614*^9}, 3.720622985205182*^9, 
   3.720623843512412*^9, 3.7206269584563084`*^9, 3.7206271450499935`*^9, 
   3.720627175053137*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Legend", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540102493376*^9}, {
  3.7205418490533*^9, 3.720541850555877*^9}, {3.7205429521091285`*^9, 
  3.7205429535117865`*^9}, {3.7205429886043215`*^9, 3.7205429937995467`*^9}, {
  3.720622998100325*^9, 3.7206230000410137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"legend", "=", 
  RowBox[{
  "Import", "[", 
   "\"\<F:\\\\MarkII\\\\LongboardMarkII\\\\Ev Sensor \
Module\\\\Data\\\\Legend.png\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.720623498340432*^9, 3.7206235049052486`*^9}, {
  3.7206235353640013`*^9, 3.720623566881595*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztyDEOgkAQBdCNNpRcwVvYWhI7jAeAsBKbJVlMjKeX4QrU7yV/8v9cxqV/
nVJKaxOnH763Woffo43xLOt7LnnqyifPuV7HczynyD2y9z8AAAAAAAAAAAAA
AAAAAAAAAAAAAABwyAbLfZ5D
    "], {{0, 100}, {75, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association["Comments" -> Association["Comment" -> "Created with GIMP"]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{75, 100},
  PlotRange->{{0, 75}, {0, 100}}]], "Output",
 CellChangeTimes->{{3.7206235405463495`*^9, 3.7206235671896653`*^9}, {
  3.720627145192875*^9, 
  3.720627175155657*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAweANxigIDiP0fyIQS
3v+BACg5So1SQ41iYAQAiTe52Q==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Overlay", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ImageTestPath", ",", "legend"}], "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{".9", ",", ".8"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.720623618111741*^9, 3.7206236335522103`*^9}, {
  3.7206237300674872`*^9, 3.7206237459730096`*^9}, {3.7206239753120146`*^9, 
  3.7206240111626587`*^9}, {3.720624174848328*^9, 3.7206242185765767`*^9}}],

Cell[BoxData[
 OverlayBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztvVuwJNd1nqnwxETMPDhiwjMxL/M045d58ZPtsCLsCNmSLdvwOGhaQ1mm
AyIpS+IMZdO8oGXCFEiIBEWBICxQIRs9hEhKaIAk7mCTHWrwAlCQGoGrgDAg
AI1Gd+M0dje6GgeF7gRFmDUPx+vU6rO4z87MXXnda1/+P77uqJOVlZWVlbn/
WnuvtfN//6V/989/9S/9xE/8xEf/B/rvn7/v3/+9j3zkfVf/3P9Ef7zrgx/9
f9//wV/55X/8wat+5f2/8pGf/KX/jhb+wl/if7uPjx49euDAgbff/oudJvGz
J06ccJbTwoMHDza+xK+2DUJQGK1WKzrbq6paLreJxVqnT58CwOZHy++CciA7
I2NqazTYtow57Sy3fZBM7cCeaGF95foG22y3vubBtY7efxP96bgn/UkLqSnb
uCkI6iI6LR2LpJNZvUEGKqi3zCAkfh9sfPbpJ3Ydiv7f2TNBWu3EWry+eNNl
F9tztLYNet6aXssbEZ8VD+XNwgehALItkkNIWGTeqLfMICT+Hk7bgES2H5Eb
kmR9ahzYvPhPO07khY4Pss01dpPWHVM89/Jr77+po6VC0EziXlYCvayZ0dha
/smX/6V6iw3mwO+DYmESl5HI+9o6NqkpcHzQjuB2rA5VWshOx3Fl21s7C+1+
2u6hJQSFFwYik6beVP7wpc/ed+3foP8bG9KrfuH/fOBrvy5/0mNaot68T8i5
F7/6wZ/7q/Xl177/b7W9RJ76Fz/5P6rvvx/bturamA9DliQxo4itjRqB+sZ3
l9x/k7yqzQTb3tpOs2FT7tIiQVBUqg9EwiJjw2kn/+vrD9x645Xkg/Q/Pa43
pNTUk/FdPHuYHtP/9Dj+xr8XD9798Zs/+Y7GD972koSOgMcHG42svgJ3bNLl
zIkr4lPcjWm/nKNF8U1PRk3bW3NfKI8J2kbJxkqS3eiSigNBsQkDkZHgtJPP
PHgjmSA9oP/pcWObf/tN733kyHX0mP6/9tpPsgs8/+h/vuZf//X3/N2/8v4r
/jeyEl6TFv7yz/6vH7vyr5nnb7c3cuHlu677tb/93r/3P9NL+Cla+fCX/y2t
6Tw+f+IOXpP+p8f1NZ3do2iOtkn7QIGq8yy/Kfv48cf/v8aNE2SCtP/00d79
d/4yQSvTp6BXMfVPaj/F/9ffiB5/++u/Tm9Ee0U7T6/lA9jloE11rBhxpXrC
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
7YWT9CpBqi0aG0beK67cr1tJ3QftLQt8F0WZCWdja9z9TdlKuE7E+VDVuvaE
SyzbfJAPYP1oTLuH/p23J4mdZJuKPkhtGpugQLboWX9R2OBgG9///oNiUr94
7cfD1A82WuE//IWjjWWPjSb41PeeGOODZIJIFo1K4jX2EqmzCGOIO3v3GWTj
ICMWm5PmemXNO7rY74O0Pjen7INSWtjog+KY7CCyZmNsxe/Cj+XeiPKnbL/a
Hw/a78K7LTPhyGvFCwa/qe2DsnH+k8NkWpOPSZsPSg+zvav2n867N+6hc+ga
bwpZD/Bly2yCHDLLt2xvSl4ytz+OTBbdOnnS8cFXXvJ1ilZJTac2Kw8/9cef
ve4zc9ufY4VOByk5o6f2//O/vpQ+Up5S5vyR14jlt5cD2H5sG5FgbLI7RR3Z
1Q1hfJDbbWkVq73cGPvWEtzIr/b3i4r18Hb4hXYrV/fB1f7RRn4t2SKHnxxP
yayni73OWI6dJUS1rVDaf3kXWcJWZd850TaCwW/q+CBvkMNAPqT13wN1H5Ra
FX45LecX8gF33r1tD+1PwQeTbwrJC3f2eoade0fyb7D6Nu11aIPde5UHsxhd
NCGdoj9m6sFBdcOajzNbpx545MhtD/xhYL7yjTsJcuEXXtjaCM8PIPscspWG
5pZ0iratYPb6S81syaW8fft+u3YrzT5i+yC3kNKVx60ury8vdBr/ug+yvXIr
LTEOv5yntXEa52o9mw1vQQy0cRRS3mVpdZnSwoNrTfimjT7IS9h6Gg+FJx5c
7fXucqBdf/dGH6x/ip29m0LKbxV+7BwB/tLr27R/n0jv7qw+aEYXTbgm+Oxp
/+zNq56Vg6vsBgdTJ1QLDc0uU+sU9Wi+8ND2QTaOvj5o1nN00//cgHt8kBt5
ecDNkR2NrvZ6Vnf2d9aRv0jjzB5aH/Lz+KDMAscfbZI3rfeL8hHg7W/0QT6A
gr0bbe/O34K9h22fwvYy9sG2I2D/JJD3laDeDq7n88GRRRP1TtHJBwer+KZT
K5x5m2YooDjDpLFTtE1mhvBQmsTBPigNJref9dhBGlWKR+jzcpedbT18D0TG
thIZCON94/CZl/fyQV7ZdoHxb9qYJyMR2WAftIcy6+/u7GHbp7AnfW07AvKl
r/aPOdq7ISY7nwkuRyfJvHrilV6Dg4v+PrjMdHAwXWZrlaHQ4sHBYXeTnzA8
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
TNU7WhXgg9q2UJzgg/DBXvw3EsspSg==
     "], {{0, 600}, {600, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{600, 600},
   PlotRange->{{0, 600}, {0, 600}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztyDEOgkAQBdCNNpRcwVvYWhI7jAeAsBKbJVlMjKeX4QrU7yV/8v9cxqV/
nVJKaxOnH763Woffo43xLOt7LnnqyifPuV7HczynyD2y9z8AAAAAAAAAAAAA
AAAAAAAAAAAAAABwyAbLfZ5D
     "], {{0, 100}, {75, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association["Comments" -> Association["Comment" -> "Created with GIMP"]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{75, 100},
   PlotRange->{{0, 75}, {0, 100}}]},
  Alignment->{0.9, 0.8}]], "Output",
 CellChangeTimes->{{3.7206236293296285`*^9, 3.720623634315919*^9}, 
   3.720623736974533*^9, {3.7206239760927305`*^9, 3.720624011945301*^9}, {
   3.7206241796111746`*^9, 3.720624219223481*^9}, {3.720627145211926*^9, 
   3.7206271751767054`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ETC", "Subsubsection",
 CellChangeTimes->{{3.7205400701835895`*^9, 3.720540102493376*^9}, {
  3.7205418490533*^9, 3.720541850555877*^9}, {3.7205429521091285`*^9, 
  3.7205429535117865`*^9}, {3.7205429886043215`*^9, 3.7205429937995467`*^9}, {
  3.7206229925121527`*^9, 3.720622995534088*^9}}],

Cell["\<\
Documentation: \
https://developers.google.com/maps/documentation/static-maps/intro?hl=en
Parameters:
center
\t{latitude,longitude}
zoom
\t1-15
size
\t{horizontal_value}x{vertical_value}
scale (for high res)
\tint
format (image type)
maptype
\troadmap
\tsatellite
\thybrid
\tterrain\
\>", "Text",
 CellChangeTimes->{{3.719826815339232*^9, 3.719826822681838*^9}, {
  3.7198280932713747`*^9, 3.719828223702992*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EPAF", "[", "38.65098", "]"}], "\[IndentingNewLine]", 
 RowBox[{"EPAF", "[", 
  RowBox[{"-", "90.31356"}], "]"}]}], "Input",
 CellChangeTimes->{{3.72055315320247*^9, 3.7205531677393804`*^9}}],

Cell[BoxData[
 RowBox[{"{", "\<\"s_|jF\"\>", "}"}]], "Output",
 CellChangeTimes->{
  3.720553168851321*^9, {3.7206271452364902`*^9, 3.720627175202273*^9}}],

Cell[BoxData[
 RowBox[{"{", "\<\"vjffP\"\>", "}"}]], "Output",
 CellChangeTimes->{
  3.720553168851321*^9, {3.7206271452364902`*^9, 3.720627175205282*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{878, 771},
WindowMargins->{{67, Automatic}, {Automatic, 101}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 101, 1, 39, "Subsubsection"],
Cell[684, 25, 6616, 203, 306, "Input"],
Cell[7303, 230, 653, 17, 50, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7993, 252, 101, 1, 39, "Subsubsection"],
Cell[8097, 255, 726, 21, 88, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8860, 281, 102, 1, 39, "Subsubsection"],
Cell[8965, 284, 755, 16, 30, "Input"],
Cell[9723, 302, 321, 9, 30, "Input"],
Cell[10047, 313, 938, 22, 50, "Input"],
Cell[10988, 337, 390, 11, 52, "Input"],
Cell[11381, 350, 839, 16, 30, "Input"],
Cell[12223, 368, 283, 7, 30, "Input"],
Cell[CellGroupData[{
Cell[12531, 379, 103, 1, 28, "Subsubsubsection"],
Cell[12637, 382, 874, 23, 50, "Input"],
Cell[13514, 407, 333, 8, 30, "Input"],
Cell[13850, 417, 324, 9, 30, "Input"],
Cell[14177, 428, 3457, 89, 247, "Input"],
Cell[CellGroupData[{
Cell[17659, 521, 177, 3, 30, "Input"],
Cell[17839, 526, 485, 7, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18385, 540, 100, 1, 39, "Subsubsection"],
Cell[18488, 543, 1426, 32, 107, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19951, 580, 145, 2, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[20121, 586, 159, 2, 28, "Subsubsubsection"],
Cell[20283, 590, 612, 12, 30, "Input"],
Cell[CellGroupData[{
Cell[20920, 606, 377, 8, 50, "Input"],
Cell[21300, 616, 3571, 49, 392, "Output"]
}, Open  ]],
Cell[24886, 668, 288, 8, 51, "Input"],
Cell[CellGroupData[{
Cell[25199, 680, 736, 21, 88, "Input"],
Cell[25938, 703, 411, 11, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26386, 719, 1744, 42, 202, "Input"],
Cell[28133, 763, 4956, 70, 297, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33126, 838, 2904, 60, 145, "Input"],
Cell[36033, 900, 1728, 23, 278, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37822, 930, 256, 3, 39, "Subsubsection"],
Cell[38081, 935, 228, 5, 50, "Input"],
Cell[CellGroupData[{
Cell[38334, 944, 2057, 31, 88, "Input"],
Cell[40394, 977, 2079, 28, 297, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42522, 1011, 201, 3, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[42748, 1018, 1792, 30, 69, "Input"],
Cell[44543, 1050, 35913, 588, 615, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80505, 1644, 300, 4, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[80830, 1652, 295, 7, 30, "Input"],
Cell[81128, 1661, 856, 20, 115, 588, 14, "CachedBoxData", "BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82021, 1686, 462, 10, 30, "Input"],
Cell[82486, 1698, 35041, 584, 615, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[117576, 2288, 297, 4, 39, "Subsubsection"],
Cell[117876, 2294, 423, 20, 315, "Text"],
Cell[CellGroupData[{
Cell[118324, 2318, 216, 4, 50, "Input"],
Cell[118543, 2324, 155, 3, 30, "Output"],
Cell[118701, 2329, 155, 3, 30, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

